{"version":3,"file":"index.es.js","sources":["../node_modules/react/cjs/react-jsx-runtime.production.js","../node_modules/react/cjs/react-jsx-runtime.development.js","../node_modules/react/jsx-runtime.js","../node_modules/clsx/dist/clsx.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/motion-utils/dist/es/noop.mjs","../node_modules/motion-utils/dist/es/errors.mjs","../node_modules/motion-utils/dist/es/memo.mjs","../node_modules/motion-utils/dist/es/progress.mjs","../node_modules/motion-utils/dist/es/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../node_modules/framer-motion/dist/es/frameloop/order.mjs","../node_modules/framer-motion/dist/es/stats/buffer.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/utils/warn-once.mjs","../node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/keys-transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number-browser.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/transform.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/measure.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/components/create-factory.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/motion-dom/dist/es/utils/supports/scroll-timeline.mjs","../node_modules/motion-dom/dist/es/animation/controls/BaseGroup.mjs","../node_modules/motion-dom/dist/es/animation/controls/Group.mjs","../node_modules/motion-dom/dist/es/animation/utils/get-value-transition.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/is-generator.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/attach-timeline.mjs","../node_modules/motion-dom/dist/es/utils/is-bezier-definition.mjs","../node_modules/motion-dom/dist/es/utils/supports/flags.mjs","../node_modules/motion-dom/dist/es/utils/supports/memo.mjs","../node_modules/motion-dom/dist/es/utils/supports/linear-easing.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/linear.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/easing.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","../node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","../node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","../node_modules/motion-dom/dist/es/gestures/hover.mjs","../node_modules/motion-dom/dist/es/gestures/utils/capture-pointer.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","../node_modules/motion-dom/dist/es/gestures/press/index.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","../node_modules/framer-motion/dist/es/render/html/utils/keys-position.mjs","../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/value/types/utils/sanitize.mjs","../node_modules/framer-motion/dist/es/value/types/utils/float-regex.mjs","../node_modules/framer-motion/dist/es/value/types/utils/is-nullish.mjs","../node_modules/framer-motion/dist/es/value/types/utils/single-color-regex.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils/color-regex.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/defaults.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-waapi.mjs","../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/components/motion/create.mjs","../node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","../src/theme/designTokens.ts","../src/components/Foundations/ThemeProvider/ThemeContext.ts","../src/components/Foundations/ThemeProvider/useTheme.ts","../src/components/Atoms/Button/Button.tsx","../src/components/Atoms/Badge/Badge.tsx"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n  REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\");\nfunction jsxProd(type, config, maybeKey) {\n  var key = null;\n  void 0 !== maybeKey && (key = \"\" + maybeKey);\n  void 0 !== config.key && (key = \"\" + config.key);\n  if (\"key\" in config) {\n    maybeKey = {};\n    for (var propName in config)\n      \"key\" !== propName && (maybeKey[propName] = config[propName]);\n  } else maybeKey = config;\n  config = maybeKey.ref;\n  return {\n    $$typeof: REACT_ELEMENT_TYPE,\n    type: type,\n    key: key,\n    ref: void 0 !== config ? config : null,\n    props: maybeKey\n  };\n}\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsx = jsxProd;\nexports.jsxs = jsxProd;\n","/**\n * @license React\n * react-jsx-runtime.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\n\"production\" !== process.env.NODE_ENV &&\n  (function () {\n    function getComponentNameFromType(type) {\n      if (null == type) return null;\n      if (\"function\" === typeof type)\n        return type.$$typeof === REACT_CLIENT_REFERENCE$2\n          ? null\n          : type.displayName || type.name || null;\n      if (\"string\" === typeof type) return type;\n      switch (type) {\n        case REACT_FRAGMENT_TYPE:\n          return \"Fragment\";\n        case REACT_PORTAL_TYPE:\n          return \"Portal\";\n        case REACT_PROFILER_TYPE:\n          return \"Profiler\";\n        case REACT_STRICT_MODE_TYPE:\n          return \"StrictMode\";\n        case REACT_SUSPENSE_TYPE:\n          return \"Suspense\";\n        case REACT_SUSPENSE_LIST_TYPE:\n          return \"SuspenseList\";\n      }\n      if (\"object\" === typeof type)\n        switch (\n          (\"number\" === typeof type.tag &&\n            console.error(\n              \"Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.\"\n            ),\n          type.$$typeof)\n        ) {\n          case REACT_CONTEXT_TYPE:\n            return (type.displayName || \"Context\") + \".Provider\";\n          case REACT_CONSUMER_TYPE:\n            return (type._context.displayName || \"Context\") + \".Consumer\";\n          case REACT_FORWARD_REF_TYPE:\n            var innerType = type.render;\n            type = type.displayName;\n            type ||\n              ((type = innerType.displayName || innerType.name || \"\"),\n              (type = \"\" !== type ? \"ForwardRef(\" + type + \")\" : \"ForwardRef\"));\n            return type;\n          case REACT_MEMO_TYPE:\n            return (\n              (innerType = type.displayName || null),\n              null !== innerType\n                ? innerType\n                : getComponentNameFromType(type.type) || \"Memo\"\n            );\n          case REACT_LAZY_TYPE:\n            innerType = type._payload;\n            type = type._init;\n            try {\n              return getComponentNameFromType(type(innerType));\n            } catch (x) {}\n        }\n      return null;\n    }\n    function testStringCoercion(value) {\n      return \"\" + value;\n    }\n    function checkKeyStringCoercion(value) {\n      try {\n        testStringCoercion(value);\n        var JSCompiler_inline_result = !1;\n      } catch (e) {\n        JSCompiler_inline_result = !0;\n      }\n      if (JSCompiler_inline_result) {\n        JSCompiler_inline_result = console;\n        var JSCompiler_temp_const = JSCompiler_inline_result.error;\n        var JSCompiler_inline_result$jscomp$0 =\n          (\"function\" === typeof Symbol &&\n            Symbol.toStringTag &&\n            value[Symbol.toStringTag]) ||\n          value.constructor.name ||\n          \"Object\";\n        JSCompiler_temp_const.call(\n          JSCompiler_inline_result,\n          \"The provided key is an unsupported type %s. This value must be coerced to a string before using it here.\",\n          JSCompiler_inline_result$jscomp$0\n        );\n        return testStringCoercion(value);\n      }\n    }\n    function disabledLog() {}\n    function disableLogs() {\n      if (0 === disabledDepth) {\n        prevLog = console.log;\n        prevInfo = console.info;\n        prevWarn = console.warn;\n        prevError = console.error;\n        prevGroup = console.group;\n        prevGroupCollapsed = console.groupCollapsed;\n        prevGroupEnd = console.groupEnd;\n        var props = {\n          configurable: !0,\n          enumerable: !0,\n          value: disabledLog,\n          writable: !0\n        };\n        Object.defineProperties(console, {\n          info: props,\n          log: props,\n          warn: props,\n          error: props,\n          group: props,\n          groupCollapsed: props,\n          groupEnd: props\n        });\n      }\n      disabledDepth++;\n    }\n    function reenableLogs() {\n      disabledDepth--;\n      if (0 === disabledDepth) {\n        var props = { configurable: !0, enumerable: !0, writable: !0 };\n        Object.defineProperties(console, {\n          log: assign({}, props, { value: prevLog }),\n          info: assign({}, props, { value: prevInfo }),\n          warn: assign({}, props, { value: prevWarn }),\n          error: assign({}, props, { value: prevError }),\n          group: assign({}, props, { value: prevGroup }),\n          groupCollapsed: assign({}, props, { value: prevGroupCollapsed }),\n          groupEnd: assign({}, props, { value: prevGroupEnd })\n        });\n      }\n      0 > disabledDepth &&\n        console.error(\n          \"disabledDepth fell below zero. This is a bug in React. Please file an issue.\"\n        );\n    }\n    function describeBuiltInComponentFrame(name) {\n      if (void 0 === prefix)\n        try {\n          throw Error();\n        } catch (x) {\n          var match = x.stack.trim().match(/\\n( *(at )?)/);\n          prefix = (match && match[1]) || \"\";\n          suffix =\n            -1 < x.stack.indexOf(\"\\n    at\")\n              ? \" (<anonymous>)\"\n              : -1 < x.stack.indexOf(\"@\")\n                ? \"@unknown:0:0\"\n                : \"\";\n        }\n      return \"\\n\" + prefix + name + suffix;\n    }\n    function describeNativeComponentFrame(fn, construct) {\n      if (!fn || reentry) return \"\";\n      var frame = componentFrameCache.get(fn);\n      if (void 0 !== frame) return frame;\n      reentry = !0;\n      frame = Error.prepareStackTrace;\n      Error.prepareStackTrace = void 0;\n      var previousDispatcher = null;\n      previousDispatcher = ReactSharedInternals.H;\n      ReactSharedInternals.H = null;\n      disableLogs();\n      try {\n        var RunInRootFrame = {\n          DetermineComponentFrameRoot: function () {\n            try {\n              if (construct) {\n                var Fake = function () {\n                  throw Error();\n                };\n                Object.defineProperty(Fake.prototype, \"props\", {\n                  set: function () {\n                    throw Error();\n                  }\n                });\n                if (\"object\" === typeof Reflect && Reflect.construct) {\n                  try {\n                    Reflect.construct(Fake, []);\n                  } catch (x) {\n                    var control = x;\n                  }\n                  Reflect.construct(fn, [], Fake);\n                } else {\n                  try {\n                    Fake.call();\n                  } catch (x$0) {\n                    control = x$0;\n                  }\n                  fn.call(Fake.prototype);\n                }\n              } else {\n                try {\n                  throw Error();\n                } catch (x$1) {\n                  control = x$1;\n                }\n                (Fake = fn()) &&\n                  \"function\" === typeof Fake.catch &&\n                  Fake.catch(function () {});\n              }\n            } catch (sample) {\n              if (sample && control && \"string\" === typeof sample.stack)\n                return [sample.stack, control.stack];\n            }\n            return [null, null];\n          }\n        };\n        RunInRootFrame.DetermineComponentFrameRoot.displayName =\n          \"DetermineComponentFrameRoot\";\n        var namePropDescriptor = Object.getOwnPropertyDescriptor(\n          RunInRootFrame.DetermineComponentFrameRoot,\n          \"name\"\n        );\n        namePropDescriptor &&\n          namePropDescriptor.configurable &&\n          Object.defineProperty(\n            RunInRootFrame.DetermineComponentFrameRoot,\n            \"name\",\n            { value: \"DetermineComponentFrameRoot\" }\n          );\n        var _RunInRootFrame$Deter =\n            RunInRootFrame.DetermineComponentFrameRoot(),\n          sampleStack = _RunInRootFrame$Deter[0],\n          controlStack = _RunInRootFrame$Deter[1];\n        if (sampleStack && controlStack) {\n          var sampleLines = sampleStack.split(\"\\n\"),\n            controlLines = controlStack.split(\"\\n\");\n          for (\n            _RunInRootFrame$Deter = namePropDescriptor = 0;\n            namePropDescriptor < sampleLines.length &&\n            !sampleLines[namePropDescriptor].includes(\n              \"DetermineComponentFrameRoot\"\n            );\n\n          )\n            namePropDescriptor++;\n          for (\n            ;\n            _RunInRootFrame$Deter < controlLines.length &&\n            !controlLines[_RunInRootFrame$Deter].includes(\n              \"DetermineComponentFrameRoot\"\n            );\n\n          )\n            _RunInRootFrame$Deter++;\n          if (\n            namePropDescriptor === sampleLines.length ||\n            _RunInRootFrame$Deter === controlLines.length\n          )\n            for (\n              namePropDescriptor = sampleLines.length - 1,\n                _RunInRootFrame$Deter = controlLines.length - 1;\n              1 <= namePropDescriptor &&\n              0 <= _RunInRootFrame$Deter &&\n              sampleLines[namePropDescriptor] !==\n                controlLines[_RunInRootFrame$Deter];\n\n            )\n              _RunInRootFrame$Deter--;\n          for (\n            ;\n            1 <= namePropDescriptor && 0 <= _RunInRootFrame$Deter;\n            namePropDescriptor--, _RunInRootFrame$Deter--\n          )\n            if (\n              sampleLines[namePropDescriptor] !==\n              controlLines[_RunInRootFrame$Deter]\n            ) {\n              if (1 !== namePropDescriptor || 1 !== _RunInRootFrame$Deter) {\n                do\n                  if (\n                    (namePropDescriptor--,\n                    _RunInRootFrame$Deter--,\n                    0 > _RunInRootFrame$Deter ||\n                      sampleLines[namePropDescriptor] !==\n                        controlLines[_RunInRootFrame$Deter])\n                  ) {\n                    var _frame =\n                      \"\\n\" +\n                      sampleLines[namePropDescriptor].replace(\n                        \" at new \",\n                        \" at \"\n                      );\n                    fn.displayName &&\n                      _frame.includes(\"<anonymous>\") &&\n                      (_frame = _frame.replace(\"<anonymous>\", fn.displayName));\n                    \"function\" === typeof fn &&\n                      componentFrameCache.set(fn, _frame);\n                    return _frame;\n                  }\n                while (1 <= namePropDescriptor && 0 <= _RunInRootFrame$Deter);\n              }\n              break;\n            }\n        }\n      } finally {\n        (reentry = !1),\n          (ReactSharedInternals.H = previousDispatcher),\n          reenableLogs(),\n          (Error.prepareStackTrace = frame);\n      }\n      sampleLines = (sampleLines = fn ? fn.displayName || fn.name : \"\")\n        ? describeBuiltInComponentFrame(sampleLines)\n        : \"\";\n      \"function\" === typeof fn && componentFrameCache.set(fn, sampleLines);\n      return sampleLines;\n    }\n    function describeUnknownElementTypeFrameInDEV(type) {\n      if (null == type) return \"\";\n      if (\"function\" === typeof type) {\n        var prototype = type.prototype;\n        return describeNativeComponentFrame(\n          type,\n          !(!prototype || !prototype.isReactComponent)\n        );\n      }\n      if (\"string\" === typeof type) return describeBuiltInComponentFrame(type);\n      switch (type) {\n        case REACT_SUSPENSE_TYPE:\n          return describeBuiltInComponentFrame(\"Suspense\");\n        case REACT_SUSPENSE_LIST_TYPE:\n          return describeBuiltInComponentFrame(\"SuspenseList\");\n      }\n      if (\"object\" === typeof type)\n        switch (type.$$typeof) {\n          case REACT_FORWARD_REF_TYPE:\n            return (type = describeNativeComponentFrame(type.render, !1)), type;\n          case REACT_MEMO_TYPE:\n            return describeUnknownElementTypeFrameInDEV(type.type);\n          case REACT_LAZY_TYPE:\n            prototype = type._payload;\n            type = type._init;\n            try {\n              return describeUnknownElementTypeFrameInDEV(type(prototype));\n            } catch (x) {}\n        }\n      return \"\";\n    }\n    function getOwner() {\n      var dispatcher = ReactSharedInternals.A;\n      return null === dispatcher ? null : dispatcher.getOwner();\n    }\n    function hasValidKey(config) {\n      if (hasOwnProperty.call(config, \"key\")) {\n        var getter = Object.getOwnPropertyDescriptor(config, \"key\").get;\n        if (getter && getter.isReactWarning) return !1;\n      }\n      return void 0 !== config.key;\n    }\n    function defineKeyPropWarningGetter(props, displayName) {\n      function warnAboutAccessingKey() {\n        specialPropKeyWarningShown ||\n          ((specialPropKeyWarningShown = !0),\n          console.error(\n            \"%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://react.dev/link/special-props)\",\n            displayName\n          ));\n      }\n      warnAboutAccessingKey.isReactWarning = !0;\n      Object.defineProperty(props, \"key\", {\n        get: warnAboutAccessingKey,\n        configurable: !0\n      });\n    }\n    function elementRefGetterWithDeprecationWarning() {\n      var componentName = getComponentNameFromType(this.type);\n      didWarnAboutElementRef[componentName] ||\n        ((didWarnAboutElementRef[componentName] = !0),\n        console.error(\n          \"Accessing element.ref was removed in React 19. ref is now a regular prop. It will be removed from the JSX Element type in a future release.\"\n        ));\n      componentName = this.props.ref;\n      return void 0 !== componentName ? componentName : null;\n    }\n    function ReactElement(type, key, self, source, owner, props) {\n      self = props.ref;\n      type = {\n        $$typeof: REACT_ELEMENT_TYPE,\n        type: type,\n        key: key,\n        props: props,\n        _owner: owner\n      };\n      null !== (void 0 !== self ? self : null)\n        ? Object.defineProperty(type, \"ref\", {\n            enumerable: !1,\n            get: elementRefGetterWithDeprecationWarning\n          })\n        : Object.defineProperty(type, \"ref\", { enumerable: !1, value: null });\n      type._store = {};\n      Object.defineProperty(type._store, \"validated\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !0,\n        value: 0\n      });\n      Object.defineProperty(type, \"_debugInfo\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !0,\n        value: null\n      });\n      Object.freeze && (Object.freeze(type.props), Object.freeze(type));\n      return type;\n    }\n    function jsxDEVImpl(\n      type,\n      config,\n      maybeKey,\n      isStaticChildren,\n      source,\n      self\n    ) {\n      if (\n        \"string\" === typeof type ||\n        \"function\" === typeof type ||\n        type === REACT_FRAGMENT_TYPE ||\n        type === REACT_PROFILER_TYPE ||\n        type === REACT_STRICT_MODE_TYPE ||\n        type === REACT_SUSPENSE_TYPE ||\n        type === REACT_SUSPENSE_LIST_TYPE ||\n        type === REACT_OFFSCREEN_TYPE ||\n        (\"object\" === typeof type &&\n          null !== type &&\n          (type.$$typeof === REACT_LAZY_TYPE ||\n            type.$$typeof === REACT_MEMO_TYPE ||\n            type.$$typeof === REACT_CONTEXT_TYPE ||\n            type.$$typeof === REACT_CONSUMER_TYPE ||\n            type.$$typeof === REACT_FORWARD_REF_TYPE ||\n            type.$$typeof === REACT_CLIENT_REFERENCE$1 ||\n            void 0 !== type.getModuleId))\n      ) {\n        var children = config.children;\n        if (void 0 !== children)\n          if (isStaticChildren)\n            if (isArrayImpl(children)) {\n              for (\n                isStaticChildren = 0;\n                isStaticChildren < children.length;\n                isStaticChildren++\n              )\n                validateChildKeys(children[isStaticChildren], type);\n              Object.freeze && Object.freeze(children);\n            } else\n              console.error(\n                \"React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.\"\n              );\n          else validateChildKeys(children, type);\n      } else {\n        children = \"\";\n        if (\n          void 0 === type ||\n          (\"object\" === typeof type &&\n            null !== type &&\n            0 === Object.keys(type).length)\n        )\n          children +=\n            \" You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.\";\n        null === type\n          ? (isStaticChildren = \"null\")\n          : isArrayImpl(type)\n            ? (isStaticChildren = \"array\")\n            : void 0 !== type && type.$$typeof === REACT_ELEMENT_TYPE\n              ? ((isStaticChildren =\n                  \"<\" +\n                  (getComponentNameFromType(type.type) || \"Unknown\") +\n                  \" />\"),\n                (children =\n                  \" Did you accidentally export a JSX literal instead of a component?\"))\n              : (isStaticChildren = typeof type);\n        console.error(\n          \"React.jsx: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s\",\n          isStaticChildren,\n          children\n        );\n      }\n      if (hasOwnProperty.call(config, \"key\")) {\n        children = getComponentNameFromType(type);\n        var keys = Object.keys(config).filter(function (k) {\n          return \"key\" !== k;\n        });\n        isStaticChildren =\n          0 < keys.length\n            ? \"{key: someKey, \" + keys.join(\": ..., \") + \": ...}\"\n            : \"{key: someKey}\";\n        didWarnAboutKeySpread[children + isStaticChildren] ||\n          ((keys =\n            0 < keys.length ? \"{\" + keys.join(\": ..., \") + \": ...}\" : \"{}\"),\n          console.error(\n            'A props object containing a \"key\" prop is being spread into JSX:\\n  let props = %s;\\n  <%s {...props} />\\nReact keys must be passed directly to JSX without using spread:\\n  let props = %s;\\n  <%s key={someKey} {...props} />',\n            isStaticChildren,\n            children,\n            keys,\n            children\n          ),\n          (didWarnAboutKeySpread[children + isStaticChildren] = !0));\n      }\n      children = null;\n      void 0 !== maybeKey &&\n        (checkKeyStringCoercion(maybeKey), (children = \"\" + maybeKey));\n      hasValidKey(config) &&\n        (checkKeyStringCoercion(config.key), (children = \"\" + config.key));\n      if (\"key\" in config) {\n        maybeKey = {};\n        for (var propName in config)\n          \"key\" !== propName && (maybeKey[propName] = config[propName]);\n      } else maybeKey = config;\n      children &&\n        defineKeyPropWarningGetter(\n          maybeKey,\n          \"function\" === typeof type\n            ? type.displayName || type.name || \"Unknown\"\n            : type\n        );\n      return ReactElement(type, children, self, source, getOwner(), maybeKey);\n    }\n    function validateChildKeys(node, parentType) {\n      if (\n        \"object\" === typeof node &&\n        node &&\n        node.$$typeof !== REACT_CLIENT_REFERENCE\n      )\n        if (isArrayImpl(node))\n          for (var i = 0; i < node.length; i++) {\n            var child = node[i];\n            isValidElement(child) && validateExplicitKey(child, parentType);\n          }\n        else if (isValidElement(node))\n          node._store && (node._store.validated = 1);\n        else if (\n          (null === node || \"object\" !== typeof node\n            ? (i = null)\n            : ((i =\n                (MAYBE_ITERATOR_SYMBOL && node[MAYBE_ITERATOR_SYMBOL]) ||\n                node[\"@@iterator\"]),\n              (i = \"function\" === typeof i ? i : null)),\n          \"function\" === typeof i &&\n            i !== node.entries &&\n            ((i = i.call(node)), i !== node))\n        )\n          for (; !(node = i.next()).done; )\n            isValidElement(node.value) &&\n              validateExplicitKey(node.value, parentType);\n    }\n    function isValidElement(object) {\n      return (\n        \"object\" === typeof object &&\n        null !== object &&\n        object.$$typeof === REACT_ELEMENT_TYPE\n      );\n    }\n    function validateExplicitKey(element, parentType) {\n      if (\n        element._store &&\n        !element._store.validated &&\n        null == element.key &&\n        ((element._store.validated = 1),\n        (parentType = getCurrentComponentErrorInfo(parentType)),\n        !ownerHasKeyUseWarning[parentType])\n      ) {\n        ownerHasKeyUseWarning[parentType] = !0;\n        var childOwner = \"\";\n        element &&\n          null != element._owner &&\n          element._owner !== getOwner() &&\n          ((childOwner = null),\n          \"number\" === typeof element._owner.tag\n            ? (childOwner = getComponentNameFromType(element._owner.type))\n            : \"string\" === typeof element._owner.name &&\n              (childOwner = element._owner.name),\n          (childOwner = \" It was passed a child from \" + childOwner + \".\"));\n        var prevGetCurrentStack = ReactSharedInternals.getCurrentStack;\n        ReactSharedInternals.getCurrentStack = function () {\n          var stack = describeUnknownElementTypeFrameInDEV(element.type);\n          prevGetCurrentStack && (stack += prevGetCurrentStack() || \"\");\n          return stack;\n        };\n        console.error(\n          'Each child in a list should have a unique \"key\" prop.%s%s See https://react.dev/link/warning-keys for more information.',\n          parentType,\n          childOwner\n        );\n        ReactSharedInternals.getCurrentStack = prevGetCurrentStack;\n      }\n    }\n    function getCurrentComponentErrorInfo(parentType) {\n      var info = \"\",\n        owner = getOwner();\n      owner &&\n        (owner = getComponentNameFromType(owner.type)) &&\n        (info = \"\\n\\nCheck the render method of `\" + owner + \"`.\");\n      info ||\n        ((parentType = getComponentNameFromType(parentType)) &&\n          (info =\n            \"\\n\\nCheck the top-level render call using <\" + parentType + \">.\"));\n      return info;\n    }\n    var React = require(\"react\"),\n      REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n      REACT_PORTAL_TYPE = Symbol.for(\"react.portal\"),\n      REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\"),\n      REACT_STRICT_MODE_TYPE = Symbol.for(\"react.strict_mode\"),\n      REACT_PROFILER_TYPE = Symbol.for(\"react.profiler\");\n    Symbol.for(\"react.provider\");\n    var REACT_CONSUMER_TYPE = Symbol.for(\"react.consumer\"),\n      REACT_CONTEXT_TYPE = Symbol.for(\"react.context\"),\n      REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\"),\n      REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\"),\n      REACT_SUSPENSE_LIST_TYPE = Symbol.for(\"react.suspense_list\"),\n      REACT_MEMO_TYPE = Symbol.for(\"react.memo\"),\n      REACT_LAZY_TYPE = Symbol.for(\"react.lazy\"),\n      REACT_OFFSCREEN_TYPE = Symbol.for(\"react.offscreen\"),\n      MAYBE_ITERATOR_SYMBOL = Symbol.iterator,\n      REACT_CLIENT_REFERENCE$2 = Symbol.for(\"react.client.reference\"),\n      ReactSharedInternals =\n        React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,\n      hasOwnProperty = Object.prototype.hasOwnProperty,\n      assign = Object.assign,\n      REACT_CLIENT_REFERENCE$1 = Symbol.for(\"react.client.reference\"),\n      isArrayImpl = Array.isArray,\n      disabledDepth = 0,\n      prevLog,\n      prevInfo,\n      prevWarn,\n      prevError,\n      prevGroup,\n      prevGroupCollapsed,\n      prevGroupEnd;\n    disabledLog.__reactDisabledLog = !0;\n    var prefix,\n      suffix,\n      reentry = !1;\n    var componentFrameCache = new (\n      \"function\" === typeof WeakMap ? WeakMap : Map\n    )();\n    var REACT_CLIENT_REFERENCE = Symbol.for(\"react.client.reference\"),\n      specialPropKeyWarningShown;\n    var didWarnAboutElementRef = {};\n    var didWarnAboutKeySpread = {},\n      ownerHasKeyUseWarning = {};\n    exports.Fragment = REACT_FRAGMENT_TYPE;\n    exports.jsx = function (type, config, maybeKey, source, self) {\n      return jsxDEVImpl(type, config, maybeKey, !1, source, self);\n    };\n    exports.jsxs = function (type, config, maybeKey, source, self) {\n      return jsxDEVImpl(type, config, maybeKey, !0, source, self);\n    };\n  })();\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e)){var o=e.length;for(t=0;t<o;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f)}else for(f in e)e[f]&&(n&&(n+=\" \"),n+=f);return n}export function clsx(){for(var e,t,f=0,n=\"\",o=arguments.length;f<o;f++)(e=arguments[f])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = \n/* @__PURE__ */ createContext(null);\n\nexport { PresenceContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence(subscribe = true) {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => {\n        if (subscribe) {\n            return register(id);\n        }\n    }, [subscribe]);\n    const safeToRemove = useCallback(() => subscribe && onExitComplete && onExitComplete(id), [id, onExitComplete, subscribe]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","/*#__NO_SIDE_EFFECTS__*/\nconst noop = (any) => any;\n\nexport { noop };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/*#__NO_SIDE_EFFECTS__*/\nfunction memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\n/*#__NO_SIDE_EFFECTS__*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\n/*#__NO_SIDE_EFFECTS__*/\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n/*#__NO_SIDE_EFFECTS__*/\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","const stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\n\nexport { stepsOrder };\n","const statsBuffer = {\n    value: null,\n    addProjectionMetrics: null,\n};\n\nexport { statsBuffer };\n","import { statsBuffer } from '../stats/buffer.mjs';\n\nfunction createRenderStep(runNextFrame, stepName) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    let numCalls = 0;\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        numCalls++;\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            /**\n             * If we're recording stats then\n             */\n            if (stepName && statsBuffer.value) {\n                statsBuffer.value.frameloop[stepName].push(numCalls);\n            }\n            numCalls = 0;\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { stepsOrder } from './order.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame, allowKeepAlive ? key : undefined);\n        return acc;\n    }, {});\n    const { read, resolveKeyframes, update, preRender, render, postRender } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        if (!MotionGlobalConfig.useManualTiming) {\n            state.delta = useDefaultElapsed\n                ? 1000 / 60\n                : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        }\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        read.process(state);\n        resolveKeyframes.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher };\n","import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","const warned = new Set();\nfunction warnOnce(condition, message, element) {\n    if (condition || warned.has(message))\n        return;\n    console.warn(message);\n    if (element)\n        console.warn(element);\n    warned.add(message);\n}\n\nexport { warnOnce };\n","import { warnOnce } from '../../utils/warn-once.mjs';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = /* @__PURE__ */ createContext({});\n\nexport { MotionContext };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        if (instance) {\n            visualState.onMount && visualState.onMount(instance);\n        }\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    var _a, _b;\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !((_a = window.MotionHandoffIsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId)) &&\n        ((_b = window.MotionHasOptimisedAnimation) === null || _b === void 0 ? void 0 : _b.call(window, optimisedAppearId)));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                var _a;\n                (_a = window.MotionHandoffMarkAsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { warning, invariant } from 'motion-utils';\nimport { forwardRef, useContext } from 'react';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    var _a, _b;\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    MotionComponent.displayName = `motion.${typeof Component === \"string\"\n        ? Component\n        : `create(${(_b = (_a = Component.displayName) !== null && _a !== void 0 ? _a : Component.name) !== null && _b !== void 0 ? _b : \"\"})`}`;\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props))\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { isCSSVariableName } from '../../render/dom/utils/is-css-variable.mjs';\n\nconst scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    for (const key in correctors) {\n        scaleCorrectors[key] = correctors[key];\n        if (isCSSVariableName(key)) {\n            scaleCorrectors[key].isCSSVariable = true;\n        }\n    }\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","const createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst browserNumberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n};\n\nexport { browserNumberValueTypes };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../../../value/types/numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { alpha } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { browserNumberValueTypes } from './number-browser.mjs';\nimport { transformValueTypes } from './transform.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    ...browserNumberValueTypes,\n    ...transformValueTypes,\n    zIndex: int,\n    size: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\nimport { transformPropOrder } from './keys-transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\nimport { buildTransform } from './build-transform.mjs';\nimport { transformProps } from './keys-transform.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { buildSVGPath } from './path.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onUpdate, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onUpdate) {\n        /**\n         * onMount works without the VisualElement because it could be\n         * called before the VisualElement payload has been hydrated.\n         * (e.g. if someone is using m components <m.circle />)\n         */\n        state.onMount = (instance) => onUpdate({ props, current: instance, ...state });\n        state.onUpdate = (visualElement) => onUpdate(visualElement);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function updateSVGDimensions(instance, renderState) {\n    try {\n        renderState.dimensions =\n            typeof instance.getBBox === \"function\"\n                ? instance.getBBox()\n                : instance.getBoundingClientRect();\n    }\n    catch (e) {\n        // Most likely trying to measure an unrendered element under Firefox\n        renderState.dimensions = {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0,\n        };\n    }\n}\n\nexport { updateSVGDimensions };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { frame } from '../../frameloop/frame.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { transformProps } from '../html/utils/keys-transform.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { updateSVGDimensions } from './utils/measure.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nconst layoutProps = [\"x\", \"y\", \"width\", \"height\", \"cx\", \"cy\", \"r\"];\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onUpdate: ({ props, prevProps, current, renderState, latestValues, }) => {\n            if (!current)\n                return;\n            let hasTransform = !!props.drag;\n            if (!hasTransform) {\n                for (const key in latestValues) {\n                    if (transformProps.has(key)) {\n                        hasTransform = true;\n                        break;\n                    }\n                }\n            }\n            if (!hasTransform)\n                return;\n            let needsMeasure = !prevProps;\n            if (prevProps) {\n                /**\n                 * Check the layout props for changes, if any are found we need to\n                 * measure the element again.\n                 */\n                for (let i = 0; i < layoutProps.length; i++) {\n                    const key = layoutProps[i];\n                    if (props[key] !==\n                        prevProps[key]) {\n                        needsMeasure = true;\n                    }\n                }\n            }\n            if (!needsMeasure)\n                return;\n            frame.read(() => {\n                updateSVGDimensions(current, renderState);\n                frame.render(() => {\n                    buildSVGAttrs(renderState, latestValues, isSVGTag(current.tagName), props.transformTemplate);\n                    renderSVG(current, renderState);\n                });\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","import { memo } from 'motion-utils';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { supportsScrollTimeline } from '../../utils/supports/scroll-timeline.mjs';\n\nclass BaseGroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    get finished() {\n        // Support for new finished Promise and legacy thennable API\n        return Promise.all(this.animations.map((animation) => \"finished\" in animation ? animation.finished : animation));\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline, fallback) {\n        const subscriptions = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                return animation.attachTimeline(timeline);\n            }\n            else if (typeof fallback === \"function\") {\n                return fallback(animation);\n            }\n        });\n        return () => {\n            subscriptions.forEach((cancel, i) => {\n                cancel && cancel();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get startTime() {\n        return this.getAll(\"startTime\");\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    flatten() {\n        this.runAll(\"flatten\");\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { BaseGroupPlaybackControls };\n","import { BaseGroupPlaybackControls } from './BaseGroup.mjs';\n\n/**\n * TODO: This is a temporary class to support the legacy\n * thennable API\n */\nclass GroupPlaybackControls extends BaseGroupPlaybackControls {\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n}\n\nexport { GroupPlaybackControls };\n","function getValueTransition(transition, key) {\n    return transition\n        ? transition[key] ||\n            transition[\"default\"] ||\n            transition\n        : undefined;\n}\n\nexport { getValueTransition };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","function isGenerator(type) {\n    return typeof type === \"function\";\n}\n\nexport { isGenerator };\n","function attachTimeline(animation, timeline) {\n    animation.timeline = timeline;\n    animation.onfinish = null;\n}\n\nexport { attachTimeline };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {\n    linearEasing: undefined,\n};\n\nexport { supportsFlags };\n","import { memo } from 'motion-utils';\nimport { supportsFlags } from './flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => { var _a; return (_a = supportsFlags[supportsFlag]) !== null && _a !== void 0 ? _a : memoized(); };\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","import { progress } from 'motion-utils';\n\nconst generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(progress(0, numPoints - 1, i)) + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","import { isBezierDefinition } from '../../../utils/is-bezier-definition.mjs';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { generateLinearEasing } from './linear.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean((typeof easing === \"function\" && supportsLinearEasing()) ||\n        !easing ||\n        (typeof easing === \"string\" &&\n            (easing in supportedWaapiEasing || supportsLinearEasing())) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\" && supportsLinearEasing()) {\n        return generateLinearEasing(easing, duration);\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    var _a;\n    if (elementOrSelector instanceof EventTarget) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            // TODO: Refactor to utils package\n            // invariant(\n            //     Boolean(scope.current),\n            //     \"Scope provided, but no element detected.\"\n            // )\n            root = scope.current;\n        }\n        const elements = (_a = selectorCache === null || selectorCache === void 0 ? void 0 : selectorCache[elementOrSelector]) !== null && _a !== void 0 ? _a : root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\nfunction isValidHover(event) {\n    return !(event.pointerType === \"touch\" || isDragActive());\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = (enterEvent) => {\n        if (!isValidHover(enterEvent))\n            return;\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(target, enterEvent);\n        if (typeof onHoverEnd !== \"function\" || !target)\n            return;\n        const onPointerLeave = (leaveEvent) => {\n            if (!isValidHover(leaveEvent))\n                return;\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        };\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    };\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","function capturePointer(event, action) {\n    const actionName = `${action}PointerCapture`;\n    if (event.target instanceof Element &&\n        actionName in event.target &&\n        event.pointerId !== undefined) {\n        try {\n            event.target[actionName](event.pointerId);\n        }\n        catch (e) { }\n    }\n}\n\nexport { capturePointer };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return (focusableElements.has(element.tagName) ||\n        element.tabIndex !== -1);\n}\n\nexport { isElementKeyboardAccessible };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","import { isDragActive } from '../drag/state/is-active.mjs';\nimport { capturePointer } from '../utils/capture-pointer.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(targetOrSelector, onPressStart, options = {}) {\n    const [targets, eventOptions, cancelEvents] = setupGesture(targetOrSelector, options);\n    const startPress = (startEvent) => {\n        const target = startEvent.currentTarget;\n        if (!target || !isValidPressEvent(startEvent) || isPressing.has(target))\n            return;\n        isPressing.add(target);\n        capturePointer(startEvent, \"set\");\n        const onPressEnd = onPressStart(target, startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            target.removeEventListener(\"pointerup\", onPointerUp);\n            target.removeEventListener(\"pointercancel\", onPointerCancel);\n            capturePointer(endEvent, \"release\");\n            if (!isValidPressEvent(endEvent) || !isPressing.has(target)) {\n                return;\n            }\n            isPressing.delete(target);\n            if (typeof onPressEnd === \"function\") {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            const isOutside = !upEvent.isTrusted\n                ? false\n                : checkOutside(upEvent, target instanceof Element\n                    ? target.getBoundingClientRect()\n                    : {\n                        left: 0,\n                        top: 0,\n                        right: window.innerWidth,\n                        bottom: window.innerHeight,\n                    });\n            if (isOutside) {\n                onPointerEnd(upEvent, false);\n            }\n            else {\n                onPointerEnd(upEvent, !(target instanceof Element) ||\n                    isNodeOrChild(target, upEvent.target));\n            }\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        target.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        target.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n        target.addEventListener(\"lostpointercapture\", onPointerCancel, eventOptions);\n    };\n    targets.forEach((target) => {\n        target = options.useGlobalTarget ? window : target;\n        let canAddKeyboardAccessibility = false;\n        if (target instanceof HTMLElement) {\n            canAddKeyboardAccessibility = true;\n            if (!isElementKeyboardAccessible(target) &&\n                target.getAttribute(\"tabindex\") === null) {\n                target.tabIndex = 0;\n            }\n        }\n        target.addEventListener(\"pointerdown\", startPress, eventOptions);\n        if (canAddKeyboardAccessibility) {\n            target.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions), eventOptions);\n        }\n    });\n    return cancelEvents;\n}\nfunction checkOutside(event, rect) {\n    return (event.clientX < rect.left ||\n        event.clientX > rect.right ||\n        event.clientY < rect.top ||\n        event.clientY > rect.bottom);\n}\n\nexport { press };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","import { transformPropOrder } from './keys-transform.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    ...transformPropOrder,\n]);\n\nexport { positionalKeys };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"12.4.10\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","import { noop } from 'motion-utils';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\n\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalValues, removeNonTranslationalTransform };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","import { invariant } from 'motion-utils';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { positionalKeys } from '../html/utils/keys-position.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { isGenerator } from 'motion-dom';\nimport { warning } from 'motion-utils';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.createdAt = time.now();\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * This method uses the createdAt and resolvedAt to calculate the\n     * animation startTime. *Ideally*, we would use the createdAt time as t=0\n     * as the following frame would then be the first frame of the animation in\n     * progress, which would feel snappier.\n     *\n     * However, if there's a delay (main thread work) between the creation of\n     * the animation and the first commited frame, we prefer to use resolvedAt\n     * to avoid a sudden jump into the animation.\n     */\n    calcStartTime() {\n        if (!this.resolvedAt)\n            return this.createdAt;\n        return this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n            ? this.resolvedAt\n            : this.createdAt;\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.resolvedAt = time.now();\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate &&\n                    onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    flatten() {\n        this.options.type = \"keyframes\";\n        this.options.ease = \"linear\";\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from 'motion-utils';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from 'motion-utils';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","import { calcGeneratorDuration, maxGeneratorDuration, generateLinearEasing } from 'motion-dom';\nimport { millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { springDefaults } from './defaults.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 *\n                clamp(0.05, 1, 1 - (options.bounce || 0)) *\n                Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n    };\n    return generator;\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","import { isBezierDefinition } from 'motion-dom';\nimport { invariant, noop } from 'motion-utils';\nimport { anticipate } from '../anticipate.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { invariant, noop, progress } from 'motion-utils';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix/index.mjs';\nimport { pipe } from './pipe.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && output[0] === output[1])\n        return () => output[1];\n    const isZeroDeltaRange = input[0] === input[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        if (isZeroDeltaRange && v < input[0])\n            return output[0];\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { progress } from 'motion-utils';\nimport { mixNumber } from '../mix/number.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { isGenerator, calcGeneratorDuration } from 'motion-dom';\nimport { invariant, millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { activeAnimations } from '../../stats/animation-count.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, element, keyframes } = this.options;\n        const KeyframeResolver$1 = (element === null || element === void 0 ? void 0 : element.KeyframeResolver) || KeyframeResolver;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    flatten() {\n        super.flatten();\n        // If we've already resolved the animation, re-initialise it\n        if (this._resolved) {\n            Object.assign(this._resolved, this.initPlayback(this._resolved.keyframes));\n        }\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = isGenerator(type)\n            ? type\n            : generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (process.env.NODE_ENV !== \"production\" &&\n            generatorFactory !== keyframes) {\n            invariant(keyframes$1.length <= 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n        }\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        activeAnimations.mainThread++;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        }\n        else if (this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n        activeAnimations.mainThread--;\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","import { mapEasingToNativeEasing } from 'motion-dom';\nimport { activeAnimations } from '../../../stats/animation-count.mjs';\nimport { statsBuffer } from '../../../stats/buffer.mjs';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeInOut\", times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    if (statsBuffer.value) {\n        activeAnimations.waapi++;\n    }\n    const animation = element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n    if (statsBuffer.value) {\n        animation.finished.finally(() => {\n            activeAnimations.waapi--;\n        });\n    }\n    return animation;\n}\n\nexport { startWaapiAnimation };\n","import { memo } from 'motion-utils';\n\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n\nexport { supportsWaapi };\n","import { supportsLinearEasing, attachTimeline, isGenerator, isWaapiSupportedEasing } from 'motion-dom';\nimport { millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\nimport { anticipate } from '../../easing/anticipate.mjs';\nimport { backInOut } from '../../easing/back.mjs';\nimport { circInOut } from '../../easing/circ.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { startWaapiAnimation } from './waapi/index.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { supportsWaapi } from './waapi/utils/supports-waapi.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (isGenerator(options.type) ||\n        options.type === \"spring\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, element, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        let { duration = 300, times, ease, type, motionValue, name, startTime, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!motionValue.owner || !motionValue.owner.current) {\n            return false;\n        }\n        /**\n         * If the user has provided an easing function name that isn't supported\n         * by WAAPI (like \"anticipate\"), we need to provide the corressponding\n         * function. This will later get converted to a linear() easing function.\n         */\n        if (typeof ease === \"string\" &&\n            supportsLinearEasing() &&\n            isUnsupportedEase(ease)) {\n            ease = unsupportedEasingFunctions[ease];\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, element, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = startWaapiAnimation(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        if (this.pendingTimeline) {\n            attachTimeline(animation, this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    get startTime() {\n        const { resolved } = this;\n        if (!resolved)\n            return null;\n        const { animation } = resolved;\n        // Coerce to number as TypeScript incorrectly types this\n        // as CSSNumberish\n        return animation.startTime;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            attachTimeline(animation, timeline);\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        if (!motionValue ||\n            !motionValue.owner ||\n            !(motionValue.owner.current instanceof HTMLElement)) {\n            return false;\n        }\n        const { onUpdate, transformTemplate } = motionValue.owner.getProps();\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !onUpdate &&\n            !transformTemplate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { getValueTransition, GroupPlaybackControls } from 'motion-dom';\nimport { secondsToMilliseconds } from 'motion-utils';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","import { getValueTransition } from 'motion-dom';\nimport { positionalKeys } from '../../render/html/utils/keys-position.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            /**\n             * If the initial prop contains a transition we can use that, otherwise\n             * allow the animation function to use the visual element's default.\n             */\n            if (typeof props.initial !== \"boolean\") {\n                const initialTransition = resolveVariant(visualElement, Array.isArray(props.initial)\n                    ? props.initial[0]\n                    : props.initial);\n                if (initialTransition && initialTransition.transition) {\n                    fallbackAnimation.transition = initialTransition.transition;\n                }\n            }\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => {\n                onExitComplete(this.id);\n            });\n        }\n    }\n    mount() {\n        const { register, onExitComplete } = this.node.presenceContext || {};\n        if (onExitComplete) {\n            onExitComplete(this.id);\n        }\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { capturePointer, isPrimaryPointer } from 'motion-dom';\nimport { secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.index = getElementIndex(event.currentTarget);\n            if (event.target instanceof Element &&\n                event.target.hasPointerCapture &&\n                event.pointerId !== undefined) {\n                try {\n                    if (!event.target.hasPointerCapture(event.pointerId)) {\n                        return;\n                    }\n                }\n                catch (e) { }\n            }\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            capturePointer(event, \"release\");\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\" ||\n                event.type === \"lostpointercapture\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        capturePointer(event, \"set\");\n        this.removeListeners = pipe(addPointerEvent(event.currentTarget, \"pointermove\", this.handlePointerMove), addPointerEvent(event.currentTarget, \"pointerup\", this.handlePointerUp), addPointerEvent(event.currentTarget, \"pointercancel\", this.handlePointerUp), addPointerEvent(event.currentTarget, \"lostpointercapture\", (lostPointerEvent, lostPointerInfo) => {\n            const index = getElementIndex(lostPointerEvent.currentTarget);\n            /**\n             * If the pointer has lost capture because it's moved in the DOM\n             * then we need to re-capture it.\n             */\n            if (index !== this.index) {\n                capturePointer(lostPointerEvent, \"set\");\n            }\n            else {\n                this.handlePointerUp(lostPointerEvent, lostPointerInfo);\n            }\n        }));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\nfunction getElementIndex(element) {\n    if (!element.parentNode)\n        return -1;\n    return Array.from(element.parentNode.children).indexOf(element);\n}\n\nexport { PanSession };\n","import { progress } from 'motion-utils';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","import { setDragLock } from 'motion-dom';\nimport { invariant } from 'motion-utils';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { noop } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { PanSession } from './PanSession.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined ||\n            prevProps.isPresent !== isPresent) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { animateMotionValue } from '../interfaces/motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { secondsToMilliseconds } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { progress, noop } from 'motion-utils';\nimport { circOut } from '../../easing/circ.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { getValueTransition } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { cancelFrame, frameData, frameSteps, frame } from '../../frameloop/frame.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { activeAnimations } from '../../stats/animation-count.mjs';\nimport { statsBuffer } from '../../stats/buffer.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcLength, calcRelativePosition, calcRelativeBox, calcBoxDelta, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nconst metrics = {\n    nodes: 0,\n    calculatedTargetDeltas: 0,\n    calculatedProjections: 0,\n};\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (statsBuffer.value) {\n                    metrics.nodes =\n                        metrics.calculatedTargetDeltas =\n                            metrics.calculatedProjections =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (statsBuffer.addProjectionMetrics) {\n                    statsBuffer.addProjectionMetrics(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeLayoutChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const hasTargetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout);\n                    /*\n                     * Note: Disabled to fix relative animations always triggering new\n                     * layout animations. If this causes further issues, we can try\n                     * a different approach to detecting relative target changes.\n                     */\n                    // || hasRelativeLayoutChanged\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeLayoutChanged;\n                    if (this.options.layoutRoot ||\n                        this.resumeFrom ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (hasTargetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n            if (this.snapshot &&\n                !calcLength(this.snapshot.measuredBox.x) &&\n                !calcLength(this.snapshot.measuredBox.y)) {\n                this.snapshot = undefined;\n            }\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            var _a;\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            var _a;\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedProjections++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a;\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                activeAnimations.layout++;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onStop: () => {\n                        activeAnimations.layout--;\n                    },\n                    onComplete: () => {\n                        activeAnimations.layout--;\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo, isCSSVariable } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    // If this is a CSS variable, set it directly on the instance.\n                    // Replacing this function from creating styles to setting them\n                    // would be a good place to remove per frame object creation\n                    if (isCSSVariable) {\n                        this.options.visualElement.renderState.vars[key] = corrected;\n                    }\n                    else {\n                        styles[key] = corrected;\n                    }\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeLayoutChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeLayoutChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeLayoutChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (statsBuffer.value) {\n        metrics.nodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    var _a;\n    return node !== node.root && ((_a = node.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot);\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { hover } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (_element, startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { press } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.current instanceof HTMLButtonElement && node.current.disabled) {\n        return;\n    }\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (_element, startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"12.4.10\", `Attempting to mix Motion versions ${nextValue.version} with 12.4.10 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { transformProps } from './html/utils/keys-transform.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState, onUpdate } = visualState;\n        this.onUpdate = onUpdate;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        if (valueIsTransform && this.onBindTransform) {\n            this.onBindTransform();\n        }\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n        this.onUpdate && this.onUpdate(this);\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","import { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { transformProps } from './utils/keys-transform.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { frame } from '../../frameloop/frame.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { transformProps } from '../html/utils/keys-transform.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { updateSVGDimensions } from './utils/measure.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n        this.updateDimensions = () => {\n            if (this.current && !this.renderState.dimensions) {\n                updateSVGDimensions(this.current, this.renderState);\n            }\n        };\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    onBindTransform() {\n        if (this.current && !this.renderState.dimensions) {\n            frame.postRender(this.updateDimensions);\n        }\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","export const designTokens = {\r\n\tcolors: {\r\n\t\tprimary: '#ff3d00', // Rouge atomique 🔥 (Contraste AA sur fond clair, AAA sur fond foncé)\r\n\t\tsecondary: '#0f172a', // Bleu très sombre (Contraste AAA sur fond clair)\r\n\t\toutline: '#ff9100', // Orange vif (Contraste AA sur fond foncé)\r\n\t\ttextPrimary: '#ffffff', // Blanc (Contraste AAA sur fond foncé)\r\n\t\ttextSecondary: '#ffd700', // Doré (Contraste AA sur fond foncé)\r\n\t\tbackground: '#1e293b', // Bleu foncé (Contraste AAA sur texte blanc)\r\n\t\terror: '#ff1744', // Rouge éclatant (Contraste AA sur fond foncé)\r\n\t\twarning: '#ff9800', // Orange percutant (Contraste AA sur fond foncé)\r\n\t\tsuccess: '#00e676', // Vert néon (Contraste AA sur fond foncé)\r\n\t\tinfo: '#29b6f6', // Bleu clair (Contraste AA sur fond foncé)\r\n\t},\r\n\tdarkMode: {\r\n\t\tprimary: '#ff5722', // Orange atomique 💣 (Contraste AA sur fond sombre)\r\n\t\tsecondary: '#2d3748', // Gris bleuté (Contraste AAA sur fond clair)\r\n\t\toutline: '#ffa726', // Orange plus doux (Contraste AA sur fond sombre)\r\n\t\ttextPrimary: '#f9fafb', // Blanc cassé (Contraste AAA sur fond sombre)\r\n\t\ttextSecondary: '#e2e8f0', // Gris clair (Contraste AA sur fond sombre)\r\n\t\tbackground: '#000000', // Full black (Contraste maximal avec tout texte clair)\r\n\t\terror: '#ff1744', // Rouge éclatant (Contraste AA sur fond sombre)\r\n\t\twarning: '#ffa726', // Orange plus doux (Contraste AA sur fond sombre)\r\n\t\tsuccess: '#00e676', // Vert néon (Contraste AA sur fond sombre)\r\n\t\tinfo: '#1a202c', // Bleu nuit (Contraste AAA sur texte blanc)\r\n\t},\r\n\tspacing: {\r\n\t\tsm: '0.75rem', // Un peu plus d'air\r\n\t\tmd: '1.5rem',\r\n\t\tlg: '2rem',\r\n\t\txl: '3rem', // Boosté pour sections impactantes\r\n\t\txxl: '4rem', // Extra large pour design impactant\r\n\t},\r\n\tborderRadius: {\r\n\t\tsm: '0.5rem',\r\n\t\tmd: '1rem',\r\n\t\tlg: '1.5rem',\r\n\t\txl: '2rem', // Arrondis ultra smooth\r\n\t},\r\n\tboxShadow: {\r\n\t\tsm: '0 2px 4px rgba(255, 0, 0, 0.2)', // Glow rouge\r\n\t\tmd: '0 4px 8px rgba(255, 0, 0, 0.3)', // Glow plus marqué\r\n\t\tlg: '0 6px 12px rgba(255, 0, 0, 0.4)', // Ombre intense\r\n\t\txl: '0 12px 24px rgba(255, 0, 0, 0.5)', // Effet néon 💡\r\n\t},\r\n\ttypography: {\r\n\t\th1: {\r\n\t\t\tfontSize: '3rem', // Impact maximal 💥\r\n\t\t\tfontWeight: '800', // Ultra bold\r\n\t\t\tlineHeight: '1.1',\r\n\t\t},\r\n\t\th2: {\r\n\t\t\tfontSize: '2.5rem',\r\n\t\t\tfontWeight: '700',\r\n\t\t\tlineHeight: '1.2',\r\n\t\t},\r\n\t\th3: {\r\n\t\t\tfontSize: '2rem',\r\n\t\t\tfontWeight: '600',\r\n\t\t\tlineHeight: '1.3',\r\n\t\t},\r\n\t\tbody: {\r\n\t\t\tfontSize: '1.125rem', // Un peu plus grand pour le confort\r\n\t\t\tfontWeight: '400',\r\n\t\t\tlineHeight: '1.6',\r\n\t\t},\r\n\t\tsubtitle: {\r\n\t\t\tfontSize: '1rem',\r\n\t\t\tfontWeight: '500',\r\n\t\t\tlineHeight: '1.4',\r\n\t\t},\r\n\t},\r\n\ttransition: '300ms cubic-bezier(0.4, 0, 0.2, 1)', // Animation fluide\r\n\tborderWidth: {\r\n\t\tsm: '2px', // Bordures plus marquées\r\n\t\tmd: '3px',\r\n\t\tlg: '5px',\r\n\t},\r\n\tfontFamily: {\r\n\t\tprimary: `'Poppins', sans-serif`, // Plus moderne et énergique\r\n\t\tsecondary: `'JetBrains Mono', monospace`, // Esprit tech\r\n\t},\r\n\tletterSpacing: {\r\n\t\tsm: '0.75px',\r\n\t\tmd: '1.25px',\r\n\t\tlg: '2px', // Espacement boosté pour un effet futuriste\r\n\t},\r\n};\r\n","import { createContext } from 'react';\r\n\r\nexport interface ThemeContextType {\r\n    isDarkMode: boolean;\r\n    toggleTheme: () => void;\r\n}\r\n\r\nexport const ThemeContext = createContext<ThemeContextType | undefined>(undefined);","import { useContext } from 'react';\r\nimport { ThemeContextType, ThemeContext } from './ThemeContext';\r\n\r\nexport default function useTheme(): ThemeContextType {\r\n\tconst context = useContext(ThemeContext);\r\n\tif (!context) {\r\n\t\tthrow new Error('useTheme must be used within a ThemeProvider');\r\n\t}\r\n\treturn context;\r\n}\r\n","import { FC, ReactNode, useTransition } from 'react';\r\nimport clsx from 'clsx';\r\nimport { motion } from 'framer-motion';\r\nimport { designTokens } from '../../../theme/designTokens';\r\nimport useTheme from '../../Foundations/ThemeProvider/useTheme';\r\n\r\nexport type ButtonProps = {\r\n\tvariant?: 'primary' | 'secondary' | 'outline';\r\n\tsize?: 'sm' | 'md' | 'lg';\r\n\ttype?: 'button' | 'submit' | 'reset';\r\n\tchildren: ReactNode;\r\n\tonClick?: () => void;\r\n\tdisabled?: boolean;\r\n\tclassName?: string;\r\n};\r\n\r\nexport const Button: FC<ButtonProps> = ({\r\n\tvariant = 'primary',\r\n\tsize = 'md',\r\n\ttype,\r\n\tchildren,\r\n\tonClick,\r\n\tdisabled,\r\n\tclassName,\r\n}) => {\r\n\tconst { isDarkMode } = useTheme();\r\n\tconst [isPending, startTransition] = useTransition();\r\n\r\n\tconst baseStyles = `rounded-lg font-medium transition-all cursor-pointer ${designTokens.transition} ${className}`;\r\n\r\n\tconst variantStylesLight = {\r\n\t\tprimary: `bg-[${designTokens.colors.primary}] text-[${designTokens.colors.textPrimary}] hover:bg-[${designTokens.colors.secondary}]`,\r\n\t\tsecondary: `bg-[${designTokens.colors.secondary}] text-[${designTokens.colors.textSecondary}] hover:bg-[${designTokens.colors.secondary}`,\r\n\t\toutline: `border border-[${designTokens.colors.outline}] text-[${designTokens.colors.outline}] hover:bg-[${designTokens.colors.secondary}`,\r\n\t};\r\n\tconst variantStylesDark = {\r\n\t\tprimary: `bg-[${designTokens.darkMode.primary}] text-[${designTokens.darkMode.textPrimary}] hover:bg-[${designTokens.darkMode.secondary}`,\r\n\t\tsecondary: `bg-[${designTokens.darkMode.secondary}] text-[${designTokens.darkMode.textPrimary}] hover:bg-[${designTokens.darkMode.secondary}`,\r\n\t\toutline: `border border-[${designTokens.darkMode.outline}] text-[${designTokens.darkMode.outline}] hover:bg-[${designTokens.darkMode.secondary}`,\r\n\t};\r\n\tconst sizeStyles = {\r\n\t\tsm: `px-3 py-1 text-sm`,\r\n\t\tmd: `px-4 py-2 text-base`,\r\n\t\tlg: `px-5 py-3 text-lg`,\r\n\t};\r\n\r\n\tconst wrappedOnClick = () => {\r\n\t\tif (onClick) {\r\n\t\t\treturn startTransition(() => {\r\n\t\t\t\tonClick();\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\treturn console.log('boom');\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<motion.button\r\n\t\t\tclassName={clsx(\r\n\t\t\t\tbaseStyles,\r\n\t\t\t\tisDarkMode ? variantStylesDark[variant] : variantStylesLight[variant],\r\n\t\t\t\tsizeStyles[size],\r\n\t\t\t\t(disabled || isPending) && 'opacity-50',\r\n\t\t\t)}\r\n\t\t\tonClick={wrappedOnClick}\r\n\t\t\tdisabled={disabled || isPending}\r\n\t\t\ttype={type}\r\n\t\t\twhileHover={{ scale: 1.1 }}\r\n\t\t\twhileTap={{ scale: 0.9 }}\r\n\t\t\tstyle={{\r\n\t\t\t\tbackgroundColor: designTokens.colors.primary,\r\n\t\t\t\tcolor: designTokens.colors.textPrimary,\r\n\t\t\t\tborderRadius: designTokens.borderRadius.lg,\r\n\t\t\t\tboxShadow: designTokens.boxShadow.md,\r\n\t\t\t\tcursor: disabled || isPending ? 'not-allowed' : 'pointer',\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{isPending ? 'Pending...' : children}\r\n\t\t</motion.button>\r\n\t);\r\n};\r\n","import { FC } from 'react';\r\nimport { designTokens } from '../../../theme/designTokens';\r\nimport useTheme from '../../Foundations/ThemeProvider/useTheme';\r\n\r\nexport type BadgeProps = {\r\n\ttext: string;\r\n\tvariant?: 'success' | 'warning' | 'error';\r\n};\r\n\r\nexport const Badge: FC<BadgeProps> = ({ text, variant = 'success' }) => {\r\n\tconst {isDarkMode} = useTheme();\r\n\treturn (\r\n\t\t<span\r\n\t\t\tclassName=\"px-3 py-1 text-sm rounded-full\"\r\n\t\t\tstyle={{ background: isDarkMode ? designTokens.darkMode[variant] : designTokens.colors[variant] }}\r\n\t\t>\r\n\t\t\t{text}\r\n\t\t</span>\r\n\t);\r\n};\r\n"],"names":["REACT_ELEMENT_TYPE","REACT_FRAGMENT_TYPE","jsxProd","type","config","maybeKey","key","propName","reactJsxRuntime_production","getComponentNameFromType","REACT_CLIENT_REFERENCE$2","REACT_PORTAL_TYPE","REACT_PROFILER_TYPE","REACT_STRICT_MODE_TYPE","REACT_SUSPENSE_TYPE","REACT_SUSPENSE_LIST_TYPE","REACT_CONTEXT_TYPE","REACT_CONSUMER_TYPE","REACT_FORWARD_REF_TYPE","innerType","REACT_MEMO_TYPE","REACT_LAZY_TYPE","testStringCoercion","value","checkKeyStringCoercion","JSCompiler_inline_result","JSCompiler_temp_const","JSCompiler_inline_result$jscomp$0","disabledLog","disableLogs","disabledDepth","prevLog","prevInfo","prevWarn","prevError","prevGroup","prevGroupCollapsed","prevGroupEnd","props","reenableLogs","assign","describeBuiltInComponentFrame","name","prefix","match","suffix","describeNativeComponentFrame","fn","construct","reentry","frame","componentFrameCache","previousDispatcher","ReactSharedInternals","RunInRootFrame","Fake","x","control","x$0","x$1","sample","namePropDescriptor","_RunInRootFrame$Deter","sampleStack","controlStack","sampleLines","controlLines","_frame","describeUnknownElementTypeFrameInDEV","prototype","getOwner","dispatcher","hasValidKey","hasOwnProperty","getter","defineKeyPropWarningGetter","displayName","warnAboutAccessingKey","specialPropKeyWarningShown","elementRefGetterWithDeprecationWarning","componentName","didWarnAboutElementRef","ReactElement","self","source","owner","jsxDEVImpl","isStaticChildren","REACT_OFFSCREEN_TYPE","REACT_CLIENT_REFERENCE$1","children","isArrayImpl","validateChildKeys","keys","k","didWarnAboutKeySpread","node","parentType","REACT_CLIENT_REFERENCE","i","child","isValidElement","validateExplicitKey","MAYBE_ITERATOR_SYMBOL","object","element","getCurrentComponentErrorInfo","ownerHasKeyUseWarning","childOwner","prevGetCurrentStack","stack","info","React","require$$0","reactJsxRuntime_development","jsxRuntimeModule","require$$1","r","e","t","f","n","o","clsx","LayoutGroupContext","createContext","useConstant","init","ref","useRef","PresenceContext","MotionConfigContext","p","usePresence","subscribe","context","useContext","isPresent","onExitComplete","register","id","useId","useEffect","safeToRemove","useCallback","isBrowser","useIsomorphicLayoutEffect","useLayoutEffect","noop","any","warning","invariant","check","message","memo","callback","result","progress","from","to","toFromDifference","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","MotionGlobalConfig","stepsOrder","statsBuffer","createRenderStep","runNextFrame","stepName","thisFrame","nextFrame","isProcessing","flushNextFrame","toKeepAlive","latestFrameData","numCalls","triggerCallback","step","keepAlive","immediate","queue","frameData","maxElapsed","createRenderBatcher","scheduleNextBatch","allowKeepAlive","useDefaultElapsed","state","flagRunNextFrame","steps","acc","read","resolveKeyframes","update","preRender","render","postRender","processBatch","timestamp","wake","process","cancelFrame","frameSteps","LazyContext","featureProps","featureDefinitions","loadFeatures","features","validMotionProps","isValidMotionProp","shouldForward","loadExternalIsValidProp","isValidProp","filterProps","isDom","forwardMotionProps","filteredProps","warned","warnOnce","condition","createDOMMotionComponentProxy","componentFactory","componentCache","deprecatedFactoryFunction","args","_target","MotionContext","isAnimationControls","v","isVariantLabel","variantPriorityOrder","variantProps","isControllingVariants","isVariantNode","getCurrentTreeVariants","initial","animate","useCreateMotionContext","useMemo","variantLabelsAsDependency","prop","motionComponentSymbol","isRefObject","useMotionRef","visualState","visualElement","externalRef","instance","camelToDash","str","optimizedAppearDataId","optimizedAppearDataAttribute","microtask","SwitchLayoutGroupContext","useVisualElement","Component","createVisualElement","ProjectionNodeConstructor","_a","_b","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","initialLayoutGroupConfig","createProjectionNode","isMounted","useInsertionEffect","optimisedAppearId","wantsHandoff","initialPromotionConfig","layoutId","layout","drag","dragConstraints","layoutScroll","layoutRoot","getClosestProjectingNode","createRendererMotionComponent","preloadedFeatures","useRender","useVisualState","MotionComponent","MeasureLayout","configAndProps","useLayoutId","isStatic","useStrictMode","layoutProjection","getProjectionFunctionality","jsxs","jsx","ForwardRefMotionComponent","forwardRef","layoutGroupId","isStrict","strictMessage","combined","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","scaleCorrectors","addScaleCorrector","correctors","transformPropOrder","transformProps","isForcedMotionValue","isMotionValue","getValueAsType","clamp","min","max","number","alpha","scale","createUnitType","unit","degrees","percent","px","vh","vw","progressPercentage","browserNumberValueTypes","transformValueTypes","int","numberValueTypes","translateAlias","numTransforms","buildTransform","latestValues","transform","transformTemplate","transformString","transformIsDefault","valueIsDefault","valueAsType","transformName","buildHTMLStyles","style","vars","transformOrigin","hasTransform","hasTransformOrigin","originX","originY","originZ","createHtmlRenderState","copyRawValuesOnly","target","useInitialMotionValues","useStyle","styleProp","useHTMLProps","htmlProps","lowercaseSVGElements","isSVGComponent","dashKeys","camelKeys","buildSVGPath","attrs","length","spacing","offset","useDashCase","pathLength","pathSpacing","calcOrigin","origin","size","calcSVGTransformOrigin","dimensions","pxOriginX","pxOriginY","buildSVGAttrs","attrX","attrY","attrScale","pathOffset","latest","isSVGTag","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","elementProps","Fragment","renderedChildren","createElement","getValueState","resolveVariantFromProps","definition","custom","current","velocity","isKeyframesTarget","isCustomValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeState","scrapeMotionValuesFromProps","createRenderState","onUpdate","makeLatestValues","makeUseVisualState","make","scrapeMotionValues","values","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","resolved","transitionEnd","transition","valueTarget","index","prevProps","newValues","htmlMotionConfig","updateSVGDimensions","renderState","renderHTML","projection","camelCaseAttributes","renderSVG","_styleProp","scrapeMotionValuesFromProps$1","targetKey","layoutProps","svgMotionConfig","needsMeasure","createMotionComponentFactory","resolveVariant","supportsScrollTimeline","BaseGroupPlaybackControls","animations","animation","newValue","timeline","fallback","subscriptions","cancel","time","speed","methodName","controls","GroupPlaybackControls","onResolve","onReject","getValueTransition","maxGeneratorDuration","calcGeneratorDuration","generator","duration","timeStep","isGenerator","attachTimeline","isBezierDefinition","easing","supportsFlags","memoSupports","supportsFlag","memoized","supportsLinearEasing","generateLinearEasing","resolution","points","numPoints","isWaapiSupportedEasing","supportedWaapiEasing","cubicBezierAsString","a","b","c","d","mapEasingToNativeEasing","segmentEasing","isDragging","isDragActive","resolveElements","elementOrSelector","scope","selectorCache","root","elements","setupGesture","options","gestureAbortController","eventOptions","isValidHover","event","hover","onHoverStart","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent","capturePointer","action","actionName","isNodeOrChild","isPrimaryPointer","focusableElements","isElementKeyboardAccessible","isPressing","filterEvents","firePointerEvent","enableKeyboardPress","focusEvent","handleKeydown","handleKeyup","handleBlur","isValidPressEvent","press","targetOrSelector","onPressStart","targets","cancelEvents","startPress","startEvent","onPressEnd","onPointerEnd","endEvent","success","onPointerUp","onPointerCancel","upEvent","checkOutside","cancelEvent","canAddKeyboardAccessibility","rect","setDragLock","axis","positionalKeys","now","clearTime","newTime","addUniqueItem","arr","item","removeItem","SubscriptionManager","handler","numSubscriptions","velocityPerSecond","frameDuration","MAX_VELOCITY_DELTA","isFloat","MotionValue","currentTime","prevFrameValue","subscription","eventName","unsubscribe","eventManagers","passiveEffect","stopPassiveEffect","prev","delta","endAnimation","startAnimation","resolve","motionValue","setMotionValue","setTarget","isWillChangeMotionValue","addValueToWillChange","willChange","getOptimisedAppearId","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","binarySubdivide","lowerBound","upperBound","mX1","mX2","currentX","currentT","cubicBezier","mY1","mY2","getTForX","aX","mirrorEasing","reverseEasing","backOut","backIn","backInOut","anticipate","circIn","circOut","circInOut","isZeroValueString","isNone","sanitize","floatRegex","isNullish","singleColorRegex","isColorString","testProp","splitColor","aName","bName","cName","clampRgbUnit","rgbUnit","rgba","red","green","blue","alpha$1","parseHex","g","hex","hsla","hue","saturation","lightness","color","colorRegex","test","NUMBER_TOKEN","COLOR_TOKEN","VAR_TOKEN","VAR_FUNCTION_TOKEN","SPLIT_TOKEN","complexRegex","analyseComplexValue","originalValue","indexes","types","split","parsedValue","parseComplexValue","createTransformer","numSections","output","convertNumbersToZero","getAnimatableNone","parsed","complex","maxDefaults","applyDefaultFilter","defaultValue","functionRegex","filter","functions","defaultValueTypes","getDefaultValueType","defaultValueType","invalidTemplates","makeNoneKeyframesAnimatable","unresolvedKeyframes","noneKeyframeIndexes","animatableTemplate","keyframe","noneIndex","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","removeNonTranslationalTransform","removedTransforms","positionalValues","paddingLeft","paddingRight","y","paddingTop","paddingBottom","top","left","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","resolver","elementsToMeasure","transformsToRestore","restore","readAllKeyframes","flushKeyframeResolvers","KeyframeResolver","onComplete","isAsync","currentValue","finalKeyframe","valueAsRead","isNumericalString","splitCSSVariableRegex","parseCSSVariable","token1","token2","maxDepth","getVariableValue","depth","trimmed","testValueType","auto","dimensionValueTypes","findDimensionValueType","DOMKeyframesResolver","originType","targetType","measureKeyframe","finalKeyframeIndex","unsetTransformName","unsetTransformValue","isAnimatable","hasKeyframesChanged","keyframes","canAnimate","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","isNotNull","getFinalKeyframe","repeat","repeatType","resolvedKeyframes","MAX_RESOLVE_DELAY","BaseAnimation","autoplay","delay","repeatDelay","resolvedAnimation","reject","mixNumber","hueToRgb","q","hslaToRgba","mixImmediate","mixLinearColor","fromExpo","expo","colorTypes","getColorType","asRGBA","model","mixColor","fromRGBA","toRGBA","blended","combineFunctions","pipe","transformers","invisibleValues","mixVisibility","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","matchOrder","orderedOrigin","pointers","originIndex","originValue","template","originStats","targetStats","mix","velocitySampleDuration","calcGeneratorVelocity","resolveValue","prevT","springDefaults","safeMin","findSpring","bounce","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","initialGuess","approximateRoot","stiffness","rootIterations","durationKeys","physicsKeys","isSpringType","getSpringOptions","springOptions","visualDuration","damping","derived","spring","optionsOrVisualDuration","restSpeed","restDelta","isResolvedFromDuration","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","dampedAngularFreq","freqForT","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","calculatedDuration","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","isOutOfBounds","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","easeIn","easeOut","easeInOut","isEasingArray","ease","easingLookup","easingDefinitionToFunction","x1","y1","x2","y2","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","isZeroDeltaRange","interpolator","progressInRange","fillOffset","remaining","offsetProgress","defaultOffset","convertOffsetToTimes","defaultEasing","keyframeValues","times","easingFunctions","absoluteTimes","mapTimeToKeyframe","frameloopDriver","passTimestamp","generators","percentToProgress","MainThreadAnimation","onStop","KeyframeResolver$1","onResolved","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","resolvedDuration","totalDuration","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","iterationProgress","done","isAnimationFinished","newSpeed","hasChanged","driver","onPlay","startTime","acceleratedValues","startWaapiAnimation","valueName","keyframeOptions","supportsWaapi","sampleDelta","maxDuration","requiresPregeneratedKeyframes","pregenerateKeyframes","sampleAnimation","pregeneratedKeyframes","unsupportedEasingFunctions","isUnsupportedEase","AcceleratedAnimation","pregeneratedAnimation","sampleTime","underDampedSpring","criticallyDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isTransitionDefined","when","_delay","delayChildren","staggerChildren","staggerDirection","animateMotionValue","isHandoff","valueTransition","shouldSkip","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","animationTypeState","appearId","animateVariant","variant","getAnimation","getChildAnimations","forwardDelay","animateChildren","first","last","maxStaggerDuration","generateStaggerDuration","sortByTreeOrder","animateVisualElement","resolvedDefinition","shallowCompare","next","prevLength","numVariantProps","getVariantContext","reversePriorityOrder","numAnimationTypes","animateList","createAnimationState","createState","isInitialRender","buildResolvedTypeValues","setAnimateFunction","makeAnimator","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","fallbackAnimation","initialTransition","fallbackTarget","shouldAnimate","setActive","isActive","createTypeState","Feature","AnimationFeature","prevAnimate","ExitAnimationFeature","prevIsPresent","exitAnimation","addDomEvent","extractEventInfo","addPointerInfo","addPointerEvent","convertBoundingBoxToBox","right","bottom","convertBoxToBoundingBox","transformBoxPoints","point","transformPoint","topLeft","bottomRight","SCALE_PRECISION","SCALE_MIN","SCALE_MAX","TRANSLATE_PRECISION","TRANSLATE_MIN","TRANSLATE_MAX","calcLength","isNear","maxDistance","calcAxisDelta","calcBoxDelta","calcRelativeAxis","relative","calcRelativeBox","calcRelativeAxisPosition","calcRelativePosition","createAxisDelta","createDelta","createAxis","createBox","eachAxis","isIdentityScale","hasScale","scaleX","scaleY","has2DTranslate","is2DTranslate","scalePoint","originPoint","distanceFromOrigin","scaled","applyPointDelta","translate","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","applyTreeDeltas","treeScale","treePath","isSharedTransition","treeLength","transformBox","translateAxis","distance","transformAxis","axisTranslate","axisScale","axisOrigin","measureViewportBox","measurePageBox","rootProjectionNode","transformPagePoint","viewportBox","scroll","distance2D","xDelta","yDelta","PanSession","handlers","dragSnapToOrigin","getPanInfo","isPanStarted","isDistancePastThreshold","onStart","onMove","getElementIndex","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","lostPointerEvent","lostPointerInfo","subtractPoint","history","lastDevicePoint","startDevicePoint","getVelocity","timeDelta","timestampedPoint","lastPoint","applyConstraints","elastic","calcRelativeAxisConstraints","calcRelativeConstraints","layoutBox","calcViewportAxisConstraints","layoutAxis","constraintsAxis","calcViewportConstraints","constraintsBox","sourceLength","targetLength","rebaseAxisConstraints","constraints","relativeConstraints","defaultElastic","resolveDragElastic","dragElastic","resolveAxisElastic","minLabel","maxLabel","resolvePointElastic","label","elementDragControls","VisualElementDragControls","originEvent","snapToCursor","dragPropagation","onDragStart","measuredAxis","animationState","dragDirectionLock","onDirectionLock","onDrag","getCurrentDirection","onDragEnd","_point","shouldDrag","axisValue","prevConstraints","onMeasureDragConstraints","constraintsElement","measuredConstraints","userConstraints","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","dragKey","externalMotionValue","boxProgress","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","direction","currentDirection","lockThreshold","DragGesture","dragControls","asyncHandler","PanGesture","pointerDownEvent","onPanSessionStart","onPanStart","onPan","onPanEnd","globalProjectionState","pixelsToPercent","pixels","correctBorderRadius","correctBoxShadow","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","layoutDependency","promoteContext","animateSingleValue","motionValue$1","isSVGElement","compareByDepth","FlatTree","timeout","start","checkElapsed","borders","numBorders","asNumber","isPx","mixValues","follow","lead","shouldCrossfadeOpacity","isOnlyMember","easeCrossfadeIn","easeCrossfadeOut","borderLabel","followRadius","getRadius","leadRadius","radiusName","compress","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisDelta","sourceAxis","removeAxisTransforms","transforms","scaleKey","originKey","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","boxEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","prevLead","indexOfNode","member","preserveFollowOpacity","crossfade","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","zTranslate","transformPerspective","rotate","rotateX","rotateY","skewX","skewY","elementScaleX","elementScaleY","transformAxes","hiddenVisibility","animationTarget","resetDistortingTransform","sharedAnimationValues","cancelTreeOptimisedTransformAnimations","projectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","subscriptionManager","isLayoutDirty","cancelDelay","resizeUnblockUpdate","finishAnimation","hasRelativeLayoutChanged","newLayout","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","hasTargetChanged","hasOnlyRelativeTargetChanged","animationOptions","resetSkewAndRotation","shouldNotifyListeners","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","updateLayout","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","prevLayout","phase","needsMeasurement","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","roundBox","checkNodeWasScrollRoot","boxWithoutScroll","transformOnly","withTransforms","boxWithoutTransform","nodeBox","forceRecalculation","isShared","relativeParent","canSkip","prevTreeScaleX","prevTreeScaleY","notifyAll","snapshot","snapshotLatestValues","mixedValues","targetDelta","relativeLayout","snapshotSource","layoutSource","isSharedLayoutAnimation","hasOpacityCrossfade","prevRelativeTarget","mixAxisDelta","mixBox","targetWithTransforms","shouldAnimatePositionOnly","xLength","yLength","needsReset","hasDistortingTransform","resetValues","styles","emptyStyles","valuesToRender","correct","applyTo","isCSSVariable","corrected","num","measuredLayout","animationType","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","mixAxis","userAgentContains","string","roundPoint","roundAxis","DocumentProjectionNode","notify","HTMLProjectionNode","documentNode","handleHoverEvent","lifecycle","HoverGesture","_element","FocusGesture","isFocusVisible","handlePressEvent","PressGesture","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","initIntersectionObserver","lookupRoot","rootObservers","observeIntersection","rootInteresectionObserver","thresholdNames","InViewFeature","viewport","rootMargin","amount","once","onIntersectionUpdate","isIntersecting","onViewportEnter","onViewportLeave","hasViewportOptionChanged","prevViewport","gestureAnimations","prefersReducedMotion","hasReducedMotionListener","initPrefersReducedMotion","motionMediaQuery","setReducedMotionPreferences","valueTypes","findValueType","visualElementStore","updateMotionValuesFromProps","nextValue","prevValue","existingValue","latestValue","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","blockInitialAnimation","initialMotionValues","remove","feature","valueIsTransform","removeOnChange","removeOnRenderRequest","removeSyncCheck","other","featureDefinition","isEnabled","FeatureConstructor","listenerName","listener","closestVariantNode","valueFromInitial","DOMVisualElement","getComputedStyle","HTMLVisualElement","defaultType","computedStyle","SVGVisualElement","createDomVisualElement","createMotionComponent","motion","designTokens","ThemeContext","useTheme","Button","onClick","disabled","className","isDarkMode","isPending","startTransition","useTransition","baseStyles","variantStylesLight","variantStylesDark","sizeStyles","wrappedOnClick","Badge","text"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249]}
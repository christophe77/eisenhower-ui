{"version":3,"file":"Button-BIfXMKTg.js","sources":["../node_modules/clsx/dist/clsx.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/motion-utils/dist/es/noop.mjs","../node_modules/motion-utils/dist/es/errors.mjs","../node_modules/motion-utils/dist/es/memo.mjs","../node_modules/motion-utils/dist/es/progress.mjs","../node_modules/motion-utils/dist/es/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../node_modules/framer-motion/dist/es/frameloop/order.mjs","../node_modules/framer-motion/dist/es/stats/buffer.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/utils/warn-once.mjs","../node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/keys-transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number-browser.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/transform.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/measure.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/components/create-factory.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/motion-dom/dist/es/utils/supports/scroll-timeline.mjs","../node_modules/motion-dom/dist/es/animation/controls/BaseGroup.mjs","../node_modules/motion-dom/dist/es/animation/controls/Group.mjs","../node_modules/motion-dom/dist/es/animation/utils/get-value-transition.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/is-generator.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/attach-timeline.mjs","../node_modules/motion-dom/dist/es/utils/is-bezier-definition.mjs","../node_modules/motion-dom/dist/es/utils/supports/flags.mjs","../node_modules/motion-dom/dist/es/utils/supports/memo.mjs","../node_modules/motion-dom/dist/es/utils/supports/linear-easing.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/linear.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/easing.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","../node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","../node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","../node_modules/motion-dom/dist/es/gestures/hover.mjs","../node_modules/motion-dom/dist/es/gestures/utils/capture-pointer.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","../node_modules/motion-dom/dist/es/gestures/press/index.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","../node_modules/framer-motion/dist/es/render/html/utils/keys-position.mjs","../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/value/types/utils/sanitize.mjs","../node_modules/framer-motion/dist/es/value/types/utils/float-regex.mjs","../node_modules/framer-motion/dist/es/value/types/utils/is-nullish.mjs","../node_modules/framer-motion/dist/es/value/types/utils/single-color-regex.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils/color-regex.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/defaults.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-waapi.mjs","../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/components/motion/create.mjs","../node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","../src/theme/designTokens.ts","../src/components/Foundations/ThemeProvider/useTheme.ts","../src/components/Atoms/Button/Button.tsx"],"sourcesContent":["function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e)){var o=e.length;for(t=0;t<o;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f)}else for(f in e)e[f]&&(n&&(n+=\" \"),n+=f);return n}export function clsx(){for(var e,t,f=0,n=\"\",o=arguments.length;f<o;f++)(e=arguments[f])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = \n/* @__PURE__ */ createContext(null);\n\nexport { PresenceContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence(subscribe = true) {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => {\n        if (subscribe) {\n            return register(id);\n        }\n    }, [subscribe]);\n    const safeToRemove = useCallback(() => subscribe && onExitComplete && onExitComplete(id), [id, onExitComplete, subscribe]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","/*#__NO_SIDE_EFFECTS__*/\nconst noop = (any) => any;\n\nexport { noop };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/*#__NO_SIDE_EFFECTS__*/\nfunction memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\n/*#__NO_SIDE_EFFECTS__*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\n/*#__NO_SIDE_EFFECTS__*/\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n/*#__NO_SIDE_EFFECTS__*/\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","const stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\n\nexport { stepsOrder };\n","const statsBuffer = {\n    value: null,\n    addProjectionMetrics: null,\n};\n\nexport { statsBuffer };\n","import { statsBuffer } from '../stats/buffer.mjs';\n\nfunction createRenderStep(runNextFrame, stepName) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    let numCalls = 0;\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        numCalls++;\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            /**\n             * If we're recording stats then\n             */\n            if (stepName && statsBuffer.value) {\n                statsBuffer.value.frameloop[stepName].push(numCalls);\n            }\n            numCalls = 0;\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { stepsOrder } from './order.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame, allowKeepAlive ? key : undefined);\n        return acc;\n    }, {});\n    const { read, resolveKeyframes, update, preRender, render, postRender } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        if (!MotionGlobalConfig.useManualTiming) {\n            state.delta = useDefaultElapsed\n                ? 1000 / 60\n                : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        }\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        read.process(state);\n        resolveKeyframes.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher };\n","import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","const warned = new Set();\nfunction warnOnce(condition, message, element) {\n    if (condition || warned.has(message))\n        return;\n    console.warn(message);\n    if (element)\n        console.warn(element);\n    warned.add(message);\n}\n\nexport { warnOnce };\n","import { warnOnce } from '../../utils/warn-once.mjs';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = /* @__PURE__ */ createContext({});\n\nexport { MotionContext };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        if (instance) {\n            visualState.onMount && visualState.onMount(instance);\n        }\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    var _a, _b;\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !((_a = window.MotionHandoffIsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId)) &&\n        ((_b = window.MotionHasOptimisedAnimation) === null || _b === void 0 ? void 0 : _b.call(window, optimisedAppearId)));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                var _a;\n                (_a = window.MotionHandoffMarkAsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { warning, invariant } from 'motion-utils';\nimport { forwardRef, useContext } from 'react';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    var _a, _b;\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    MotionComponent.displayName = `motion.${typeof Component === \"string\"\n        ? Component\n        : `create(${(_b = (_a = Component.displayName) !== null && _a !== void 0 ? _a : Component.name) !== null && _b !== void 0 ? _b : \"\"})`}`;\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props))\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { isCSSVariableName } from '../../render/dom/utils/is-css-variable.mjs';\n\nconst scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    for (const key in correctors) {\n        scaleCorrectors[key] = correctors[key];\n        if (isCSSVariableName(key)) {\n            scaleCorrectors[key].isCSSVariable = true;\n        }\n    }\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","const createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst browserNumberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n};\n\nexport { browserNumberValueTypes };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../../../value/types/numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { alpha } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { browserNumberValueTypes } from './number-browser.mjs';\nimport { transformValueTypes } from './transform.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    ...browserNumberValueTypes,\n    ...transformValueTypes,\n    zIndex: int,\n    size: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\nimport { transformPropOrder } from './keys-transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\nimport { buildTransform } from './build-transform.mjs';\nimport { transformProps } from './keys-transform.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { buildSVGPath } from './path.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onUpdate, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onUpdate) {\n        /**\n         * onMount works without the VisualElement because it could be\n         * called before the VisualElement payload has been hydrated.\n         * (e.g. if someone is using m components <m.circle />)\n         */\n        state.onMount = (instance) => onUpdate({ props, current: instance, ...state });\n        state.onUpdate = (visualElement) => onUpdate(visualElement);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function updateSVGDimensions(instance, renderState) {\n    try {\n        renderState.dimensions =\n            typeof instance.getBBox === \"function\"\n                ? instance.getBBox()\n                : instance.getBoundingClientRect();\n    }\n    catch (e) {\n        // Most likely trying to measure an unrendered element under Firefox\n        renderState.dimensions = {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0,\n        };\n    }\n}\n\nexport { updateSVGDimensions };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { frame } from '../../frameloop/frame.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { transformProps } from '../html/utils/keys-transform.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { updateSVGDimensions } from './utils/measure.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nconst layoutProps = [\"x\", \"y\", \"width\", \"height\", \"cx\", \"cy\", \"r\"];\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onUpdate: ({ props, prevProps, current, renderState, latestValues, }) => {\n            if (!current)\n                return;\n            let hasTransform = !!props.drag;\n            if (!hasTransform) {\n                for (const key in latestValues) {\n                    if (transformProps.has(key)) {\n                        hasTransform = true;\n                        break;\n                    }\n                }\n            }\n            if (!hasTransform)\n                return;\n            let needsMeasure = !prevProps;\n            if (prevProps) {\n                /**\n                 * Check the layout props for changes, if any are found we need to\n                 * measure the element again.\n                 */\n                for (let i = 0; i < layoutProps.length; i++) {\n                    const key = layoutProps[i];\n                    if (props[key] !==\n                        prevProps[key]) {\n                        needsMeasure = true;\n                    }\n                }\n            }\n            if (!needsMeasure)\n                return;\n            frame.read(() => {\n                updateSVGDimensions(current, renderState);\n                frame.render(() => {\n                    buildSVGAttrs(renderState, latestValues, isSVGTag(current.tagName), props.transformTemplate);\n                    renderSVG(current, renderState);\n                });\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","import { memo } from 'motion-utils';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { supportsScrollTimeline } from '../../utils/supports/scroll-timeline.mjs';\n\nclass BaseGroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    get finished() {\n        // Support for new finished Promise and legacy thennable API\n        return Promise.all(this.animations.map((animation) => \"finished\" in animation ? animation.finished : animation));\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline, fallback) {\n        const subscriptions = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                return animation.attachTimeline(timeline);\n            }\n            else if (typeof fallback === \"function\") {\n                return fallback(animation);\n            }\n        });\n        return () => {\n            subscriptions.forEach((cancel, i) => {\n                cancel && cancel();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get startTime() {\n        return this.getAll(\"startTime\");\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    flatten() {\n        this.runAll(\"flatten\");\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { BaseGroupPlaybackControls };\n","import { BaseGroupPlaybackControls } from './BaseGroup.mjs';\n\n/**\n * TODO: This is a temporary class to support the legacy\n * thennable API\n */\nclass GroupPlaybackControls extends BaseGroupPlaybackControls {\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n}\n\nexport { GroupPlaybackControls };\n","function getValueTransition(transition, key) {\n    return transition\n        ? transition[key] ||\n            transition[\"default\"] ||\n            transition\n        : undefined;\n}\n\nexport { getValueTransition };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","function isGenerator(type) {\n    return typeof type === \"function\";\n}\n\nexport { isGenerator };\n","function attachTimeline(animation, timeline) {\n    animation.timeline = timeline;\n    animation.onfinish = null;\n}\n\nexport { attachTimeline };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {\n    linearEasing: undefined,\n};\n\nexport { supportsFlags };\n","import { memo } from 'motion-utils';\nimport { supportsFlags } from './flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => { var _a; return (_a = supportsFlags[supportsFlag]) !== null && _a !== void 0 ? _a : memoized(); };\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","import { progress } from 'motion-utils';\n\nconst generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(progress(0, numPoints - 1, i)) + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","import { isBezierDefinition } from '../../../utils/is-bezier-definition.mjs';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { generateLinearEasing } from './linear.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean((typeof easing === \"function\" && supportsLinearEasing()) ||\n        !easing ||\n        (typeof easing === \"string\" &&\n            (easing in supportedWaapiEasing || supportsLinearEasing())) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\" && supportsLinearEasing()) {\n        return generateLinearEasing(easing, duration);\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    var _a;\n    if (elementOrSelector instanceof EventTarget) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            // TODO: Refactor to utils package\n            // invariant(\n            //     Boolean(scope.current),\n            //     \"Scope provided, but no element detected.\"\n            // )\n            root = scope.current;\n        }\n        const elements = (_a = selectorCache === null || selectorCache === void 0 ? void 0 : selectorCache[elementOrSelector]) !== null && _a !== void 0 ? _a : root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\nfunction isValidHover(event) {\n    return !(event.pointerType === \"touch\" || isDragActive());\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = (enterEvent) => {\n        if (!isValidHover(enterEvent))\n            return;\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(target, enterEvent);\n        if (typeof onHoverEnd !== \"function\" || !target)\n            return;\n        const onPointerLeave = (leaveEvent) => {\n            if (!isValidHover(leaveEvent))\n                return;\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        };\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    };\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","function capturePointer(event, action) {\n    const actionName = `${action}PointerCapture`;\n    if (event.target instanceof Element &&\n        actionName in event.target &&\n        event.pointerId !== undefined) {\n        try {\n            event.target[actionName](event.pointerId);\n        }\n        catch (e) { }\n    }\n}\n\nexport { capturePointer };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return (focusableElements.has(element.tagName) ||\n        element.tabIndex !== -1);\n}\n\nexport { isElementKeyboardAccessible };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","import { isDragActive } from '../drag/state/is-active.mjs';\nimport { capturePointer } from '../utils/capture-pointer.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(targetOrSelector, onPressStart, options = {}) {\n    const [targets, eventOptions, cancelEvents] = setupGesture(targetOrSelector, options);\n    const startPress = (startEvent) => {\n        const target = startEvent.currentTarget;\n        if (!target || !isValidPressEvent(startEvent) || isPressing.has(target))\n            return;\n        isPressing.add(target);\n        capturePointer(startEvent, \"set\");\n        const onPressEnd = onPressStart(target, startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            target.removeEventListener(\"pointerup\", onPointerUp);\n            target.removeEventListener(\"pointercancel\", onPointerCancel);\n            capturePointer(endEvent, \"release\");\n            if (!isValidPressEvent(endEvent) || !isPressing.has(target)) {\n                return;\n            }\n            isPressing.delete(target);\n            if (typeof onPressEnd === \"function\") {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            const isOutside = !upEvent.isTrusted\n                ? false\n                : checkOutside(upEvent, target instanceof Element\n                    ? target.getBoundingClientRect()\n                    : {\n                        left: 0,\n                        top: 0,\n                        right: window.innerWidth,\n                        bottom: window.innerHeight,\n                    });\n            if (isOutside) {\n                onPointerEnd(upEvent, false);\n            }\n            else {\n                onPointerEnd(upEvent, !(target instanceof Element) ||\n                    isNodeOrChild(target, upEvent.target));\n            }\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        target.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        target.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n        target.addEventListener(\"lostpointercapture\", onPointerCancel, eventOptions);\n    };\n    targets.forEach((target) => {\n        target = options.useGlobalTarget ? window : target;\n        let canAddKeyboardAccessibility = false;\n        if (target instanceof HTMLElement) {\n            canAddKeyboardAccessibility = true;\n            if (!isElementKeyboardAccessible(target) &&\n                target.getAttribute(\"tabindex\") === null) {\n                target.tabIndex = 0;\n            }\n        }\n        target.addEventListener(\"pointerdown\", startPress, eventOptions);\n        if (canAddKeyboardAccessibility) {\n            target.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions), eventOptions);\n        }\n    });\n    return cancelEvents;\n}\nfunction checkOutside(event, rect) {\n    return (event.clientX < rect.left ||\n        event.clientX > rect.right ||\n        event.clientY < rect.top ||\n        event.clientY > rect.bottom);\n}\n\nexport { press };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","import { transformPropOrder } from './keys-transform.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    ...transformPropOrder,\n]);\n\nexport { positionalKeys };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"12.4.10\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","import { noop } from 'motion-utils';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\n\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalValues, removeNonTranslationalTransform };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","import { invariant } from 'motion-utils';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { positionalKeys } from '../html/utils/keys-position.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { isGenerator } from 'motion-dom';\nimport { warning } from 'motion-utils';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.createdAt = time.now();\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * This method uses the createdAt and resolvedAt to calculate the\n     * animation startTime. *Ideally*, we would use the createdAt time as t=0\n     * as the following frame would then be the first frame of the animation in\n     * progress, which would feel snappier.\n     *\n     * However, if there's a delay (main thread work) between the creation of\n     * the animation and the first commited frame, we prefer to use resolvedAt\n     * to avoid a sudden jump into the animation.\n     */\n    calcStartTime() {\n        if (!this.resolvedAt)\n            return this.createdAt;\n        return this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n            ? this.resolvedAt\n            : this.createdAt;\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.resolvedAt = time.now();\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate &&\n                    onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    flatten() {\n        this.options.type = \"keyframes\";\n        this.options.ease = \"linear\";\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from 'motion-utils';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from 'motion-utils';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","import { calcGeneratorDuration, maxGeneratorDuration, generateLinearEasing } from 'motion-dom';\nimport { millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { springDefaults } from './defaults.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 *\n                clamp(0.05, 1, 1 - (options.bounce || 0)) *\n                Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n    };\n    return generator;\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","import { isBezierDefinition } from 'motion-dom';\nimport { invariant, noop } from 'motion-utils';\nimport { anticipate } from '../anticipate.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { invariant, noop, progress } from 'motion-utils';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix/index.mjs';\nimport { pipe } from './pipe.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && output[0] === output[1])\n        return () => output[1];\n    const isZeroDeltaRange = input[0] === input[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        if (isZeroDeltaRange && v < input[0])\n            return output[0];\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { progress } from 'motion-utils';\nimport { mixNumber } from '../mix/number.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { isGenerator, calcGeneratorDuration } from 'motion-dom';\nimport { invariant, millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { activeAnimations } from '../../stats/animation-count.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, element, keyframes } = this.options;\n        const KeyframeResolver$1 = (element === null || element === void 0 ? void 0 : element.KeyframeResolver) || KeyframeResolver;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    flatten() {\n        super.flatten();\n        // If we've already resolved the animation, re-initialise it\n        if (this._resolved) {\n            Object.assign(this._resolved, this.initPlayback(this._resolved.keyframes));\n        }\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = isGenerator(type)\n            ? type\n            : generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (process.env.NODE_ENV !== \"production\" &&\n            generatorFactory !== keyframes) {\n            invariant(keyframes$1.length <= 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n        }\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        activeAnimations.mainThread++;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        }\n        else if (this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n        activeAnimations.mainThread--;\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","import { mapEasingToNativeEasing } from 'motion-dom';\nimport { activeAnimations } from '../../../stats/animation-count.mjs';\nimport { statsBuffer } from '../../../stats/buffer.mjs';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeInOut\", times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    if (statsBuffer.value) {\n        activeAnimations.waapi++;\n    }\n    const animation = element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n    if (statsBuffer.value) {\n        animation.finished.finally(() => {\n            activeAnimations.waapi--;\n        });\n    }\n    return animation;\n}\n\nexport { startWaapiAnimation };\n","import { memo } from 'motion-utils';\n\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n\nexport { supportsWaapi };\n","import { supportsLinearEasing, attachTimeline, isGenerator, isWaapiSupportedEasing } from 'motion-dom';\nimport { millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\nimport { anticipate } from '../../easing/anticipate.mjs';\nimport { backInOut } from '../../easing/back.mjs';\nimport { circInOut } from '../../easing/circ.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { startWaapiAnimation } from './waapi/index.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { supportsWaapi } from './waapi/utils/supports-waapi.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (isGenerator(options.type) ||\n        options.type === \"spring\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, element, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        let { duration = 300, times, ease, type, motionValue, name, startTime, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!motionValue.owner || !motionValue.owner.current) {\n            return false;\n        }\n        /**\n         * If the user has provided an easing function name that isn't supported\n         * by WAAPI (like \"anticipate\"), we need to provide the corressponding\n         * function. This will later get converted to a linear() easing function.\n         */\n        if (typeof ease === \"string\" &&\n            supportsLinearEasing() &&\n            isUnsupportedEase(ease)) {\n            ease = unsupportedEasingFunctions[ease];\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, element, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = startWaapiAnimation(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        if (this.pendingTimeline) {\n            attachTimeline(animation, this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    get startTime() {\n        const { resolved } = this;\n        if (!resolved)\n            return null;\n        const { animation } = resolved;\n        // Coerce to number as TypeScript incorrectly types this\n        // as CSSNumberish\n        return animation.startTime;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            attachTimeline(animation, timeline);\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        if (!motionValue ||\n            !motionValue.owner ||\n            !(motionValue.owner.current instanceof HTMLElement)) {\n            return false;\n        }\n        const { onUpdate, transformTemplate } = motionValue.owner.getProps();\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !onUpdate &&\n            !transformTemplate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { getValueTransition, GroupPlaybackControls } from 'motion-dom';\nimport { secondsToMilliseconds } from 'motion-utils';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","import { getValueTransition } from 'motion-dom';\nimport { positionalKeys } from '../../render/html/utils/keys-position.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            /**\n             * If the initial prop contains a transition we can use that, otherwise\n             * allow the animation function to use the visual element's default.\n             */\n            if (typeof props.initial !== \"boolean\") {\n                const initialTransition = resolveVariant(visualElement, Array.isArray(props.initial)\n                    ? props.initial[0]\n                    : props.initial);\n                if (initialTransition && initialTransition.transition) {\n                    fallbackAnimation.transition = initialTransition.transition;\n                }\n            }\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => {\n                onExitComplete(this.id);\n            });\n        }\n    }\n    mount() {\n        const { register, onExitComplete } = this.node.presenceContext || {};\n        if (onExitComplete) {\n            onExitComplete(this.id);\n        }\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { capturePointer, isPrimaryPointer } from 'motion-dom';\nimport { secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.index = getElementIndex(event.currentTarget);\n            if (event.target instanceof Element &&\n                event.target.hasPointerCapture &&\n                event.pointerId !== undefined) {\n                try {\n                    if (!event.target.hasPointerCapture(event.pointerId)) {\n                        return;\n                    }\n                }\n                catch (e) { }\n            }\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            capturePointer(event, \"release\");\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\" ||\n                event.type === \"lostpointercapture\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        capturePointer(event, \"set\");\n        this.removeListeners = pipe(addPointerEvent(event.currentTarget, \"pointermove\", this.handlePointerMove), addPointerEvent(event.currentTarget, \"pointerup\", this.handlePointerUp), addPointerEvent(event.currentTarget, \"pointercancel\", this.handlePointerUp), addPointerEvent(event.currentTarget, \"lostpointercapture\", (lostPointerEvent, lostPointerInfo) => {\n            const index = getElementIndex(lostPointerEvent.currentTarget);\n            /**\n             * If the pointer has lost capture because it's moved in the DOM\n             * then we need to re-capture it.\n             */\n            if (index !== this.index) {\n                capturePointer(lostPointerEvent, \"set\");\n            }\n            else {\n                this.handlePointerUp(lostPointerEvent, lostPointerInfo);\n            }\n        }));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\nfunction getElementIndex(element) {\n    if (!element.parentNode)\n        return -1;\n    return Array.from(element.parentNode.children).indexOf(element);\n}\n\nexport { PanSession };\n","import { progress } from 'motion-utils';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","import { setDragLock } from 'motion-dom';\nimport { invariant } from 'motion-utils';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { noop } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { PanSession } from './PanSession.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined ||\n            prevProps.isPresent !== isPresent) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { animateMotionValue } from '../interfaces/motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { secondsToMilliseconds } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { progress, noop } from 'motion-utils';\nimport { circOut } from '../../easing/circ.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { getValueTransition } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { cancelFrame, frameData, frameSteps, frame } from '../../frameloop/frame.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { activeAnimations } from '../../stats/animation-count.mjs';\nimport { statsBuffer } from '../../stats/buffer.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcLength, calcRelativePosition, calcRelativeBox, calcBoxDelta, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nconst metrics = {\n    nodes: 0,\n    calculatedTargetDeltas: 0,\n    calculatedProjections: 0,\n};\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (statsBuffer.value) {\n                    metrics.nodes =\n                        metrics.calculatedTargetDeltas =\n                            metrics.calculatedProjections =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (statsBuffer.addProjectionMetrics) {\n                    statsBuffer.addProjectionMetrics(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeLayoutChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const hasTargetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout);\n                    /*\n                     * Note: Disabled to fix relative animations always triggering new\n                     * layout animations. If this causes further issues, we can try\n                     * a different approach to detecting relative target changes.\n                     */\n                    // || hasRelativeLayoutChanged\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeLayoutChanged;\n                    if (this.options.layoutRoot ||\n                        this.resumeFrom ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (hasTargetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n            if (this.snapshot &&\n                !calcLength(this.snapshot.measuredBox.x) &&\n                !calcLength(this.snapshot.measuredBox.y)) {\n                this.snapshot = undefined;\n            }\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            var _a;\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            var _a;\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedProjections++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a;\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                activeAnimations.layout++;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onStop: () => {\n                        activeAnimations.layout--;\n                    },\n                    onComplete: () => {\n                        activeAnimations.layout--;\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo, isCSSVariable } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    // If this is a CSS variable, set it directly on the instance.\n                    // Replacing this function from creating styles to setting them\n                    // would be a good place to remove per frame object creation\n                    if (isCSSVariable) {\n                        this.options.visualElement.renderState.vars[key] = corrected;\n                    }\n                    else {\n                        styles[key] = corrected;\n                    }\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeLayoutChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeLayoutChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeLayoutChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (statsBuffer.value) {\n        metrics.nodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    var _a;\n    return node !== node.root && ((_a = node.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot);\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { hover } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (_element, startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { press } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.current instanceof HTMLButtonElement && node.current.disabled) {\n        return;\n    }\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (_element, startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"12.4.10\", `Attempting to mix Motion versions ${nextValue.version} with 12.4.10 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { transformProps } from './html/utils/keys-transform.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState, onUpdate } = visualState;\n        this.onUpdate = onUpdate;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        if (valueIsTransform && this.onBindTransform) {\n            this.onBindTransform();\n        }\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n        this.onUpdate && this.onUpdate(this);\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","import { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { transformProps } from './utils/keys-transform.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { frame } from '../../frameloop/frame.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { transformProps } from '../html/utils/keys-transform.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { updateSVGDimensions } from './utils/measure.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n        this.updateDimensions = () => {\n            if (this.current && !this.renderState.dimensions) {\n                updateSVGDimensions(this.current, this.renderState);\n            }\n        };\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    onBindTransform() {\n        if (this.current && !this.renderState.dimensions) {\n            frame.postRender(this.updateDimensions);\n        }\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","export const designTokens = {\r\n\tcolors: {\r\n\t\tprimary: '#ff3d00', // Rouge atomique 🔥 (Contraste AA sur fond clair, AAA sur fond foncé)\r\n\t\tsecondary: '#0f172a', // Bleu très sombre (Contraste AAA sur fond clair)\r\n\t\toutline: '#ff9100', // Orange vif (Contraste AA sur fond foncé)\r\n\t\ttextPrimary: '#ffffff', // Blanc (Contraste AAA sur fond foncé)\r\n\t\ttextSecondary: '#ffd700', // Doré (Contraste AA sur fond foncé)\r\n\t\tbackground: '#1e293b', // Bleu foncé (Contraste AAA sur texte blanc)\r\n\t\terror: '#ff1744', // Rouge éclatant (Contraste AA sur fond foncé)\r\n\t\twarning: '#ff9800', // Orange percutant (Contraste AA sur fond foncé)\r\n\t\tsuccess: '#00e676', // Vert néon (Contraste AA sur fond foncé)\r\n\t\tinfo: '#29b6f6', // Bleu clair (Contraste AA sur fond foncé)\r\n\t},\r\n\tdarkMode: {\r\n\t\tprimary: '#ff5722', // Orange atomique 💣 (Contraste AA sur fond sombre)\r\n\t\tsecondary: '#2d3748', // Gris bleuté (Contraste AAA sur fond clair)\r\n\t\toutline: '#ffa726', // Orange plus doux (Contraste AA sur fond sombre)\r\n\t\ttextPrimary: '#f9fafb', // Blanc cassé (Contraste AAA sur fond sombre)\r\n\t\ttextSecondary: '#e2e8f0', // Gris clair (Contraste AA sur fond sombre)\r\n\t\tbackground: '#000000', // Full black (Contraste maximal avec tout texte clair)\r\n\t\terror: '#ff1744', // Rouge éclatant (Contraste AA sur fond sombre)\r\n\t\twarning: '#ffa726', // Orange plus doux (Contraste AA sur fond sombre)\r\n\t\tsuccess: '#00e676', // Vert néon (Contraste AA sur fond sombre)\r\n\t\tinfo: '#1a202c', // Bleu nuit (Contraste AAA sur texte blanc)\r\n\t},\r\n\tspacing: {\r\n\t\tsm: '0.75rem', // Un peu plus d'air\r\n\t\tmd: '1.5rem',\r\n\t\tlg: '2rem',\r\n\t\txl: '3rem', // Boosté pour sections impactantes\r\n\t\txxl: '4rem', // Extra large pour design impactant\r\n\t},\r\n\tborderRadius: {\r\n\t\tsm: '0.5rem',\r\n\t\tmd: '1rem',\r\n\t\tlg: '1.5rem',\r\n\t\txl: '2rem', // Arrondis ultra smooth\r\n\t},\r\n\tboxShadow: {\r\n\t\tsm: '0 2px 4px rgba(255, 0, 0, 0.2)', // Glow rouge\r\n\t\tmd: '0 4px 8px rgba(255, 0, 0, 0.3)', // Glow plus marqué\r\n\t\tlg: '0 6px 12px rgba(255, 0, 0, 0.4)', // Ombre intense\r\n\t\txl: '0 12px 24px rgba(255, 0, 0, 0.5)', // Effet néon 💡\r\n\t},\r\n\ttypography: {\r\n\t\th1: {\r\n\t\t\tfontSize: '3rem', // Impact maximal 💥\r\n\t\t\tfontWeight: '800', // Ultra bold\r\n\t\t\tlineHeight: '1.1',\r\n\t\t},\r\n\t\th2: {\r\n\t\t\tfontSize: '2.5rem',\r\n\t\t\tfontWeight: '700',\r\n\t\t\tlineHeight: '1.2',\r\n\t\t},\r\n\t\th3: {\r\n\t\t\tfontSize: '2rem',\r\n\t\t\tfontWeight: '600',\r\n\t\t\tlineHeight: '1.3',\r\n\t\t},\r\n\t\tbody: {\r\n\t\t\tfontSize: '1.125rem', // Un peu plus grand pour le confort\r\n\t\t\tfontWeight: '400',\r\n\t\t\tlineHeight: '1.6',\r\n\t\t},\r\n\t\tsubtitle: {\r\n\t\t\tfontSize: '1rem',\r\n\t\t\tfontWeight: '500',\r\n\t\t\tlineHeight: '1.4',\r\n\t\t},\r\n\t},\r\n\ttransition: '300ms cubic-bezier(0.4, 0, 0.2, 1)', // Animation fluide\r\n\tborderWidth: {\r\n\t\tsm: '2px', // Bordures plus marquées\r\n\t\tmd: '3px',\r\n\t\tlg: '5px',\r\n\t},\r\n\tfontFamily: {\r\n\t\tprimary: `'Poppins', sans-serif`, // Plus moderne et énergique\r\n\t\tsecondary: `'JetBrains Mono', monospace`, // Esprit tech\r\n\t},\r\n\tletterSpacing: {\r\n\t\tsm: '0.75px',\r\n\t\tmd: '1.25px',\r\n\t\tlg: '2px', // Espacement boosté pour un effet futuriste\r\n\t},\r\n};\r\n","import { useContext } from 'react';\r\nimport { ThemeContextType, ThemeContext } from './ThemeContext';\r\n\r\nexport default function useTheme(): ThemeContextType {\r\n\tconst context = useContext(ThemeContext);\r\n\tif (!context) {\r\n\t\tthrow new Error('useTheme must be used within a ThemeProvider');\r\n\t}\r\n\treturn context;\r\n}\r\n","import { FC, ReactNode, useTransition } from 'react';\r\nimport clsx from 'clsx';\r\nimport { motion } from 'framer-motion';\r\nimport { designTokens } from '../../../theme/designTokens';\r\nimport useTheme from '../../Foundations/ThemeProvider/useTheme';\r\n\r\nexport type ButtonProps = {\r\n\tvariant?: 'primary' | 'secondary' | 'outline';\r\n\tsize?: 'sm' | 'md' | 'lg';\r\n\ttype?: 'button' | 'submit' | 'reset';\r\n\tchildren: ReactNode;\r\n\tonClick?: () => void;\r\n\tdisabled?: boolean;\r\n\tclassName?: string;\r\n};\r\n\r\nconst Button: FC<ButtonProps> = ({\r\n\tvariant = 'primary',\r\n\tsize = 'md',\r\n\ttype,\r\n\tchildren,\r\n\tonClick,\r\n\tdisabled,\r\n\tclassName,\r\n}) => {\r\n\tconst { isDarkMode } = useTheme();\r\n\tconst [isPending, startTransition] = useTransition();\r\n\r\n\tconst baseStyles = `rounded-lg font-medium transition-all cursor-pointer ${designTokens.transition} ${className}`;\r\n\r\n\tconst variantStylesLight = {\r\n\t\tprimary: `bg-[${designTokens.colors.primary}] text-[${designTokens.colors.textPrimary}] hover:bg-[${designTokens.colors.secondary}]`,\r\n\t\tsecondary: `bg-[${designTokens.colors.secondary}] text-[${designTokens.colors.textSecondary}] hover:bg-[${designTokens.colors.secondary}`,\r\n\t\toutline: `border border-[${designTokens.colors.outline}] text-[${designTokens.colors.outline}] hover:bg-[${designTokens.colors.secondary}`,\r\n\t};\r\n\tconst variantStylesDark = {\r\n\t\tprimary: `bg-[${designTokens.darkMode.primary}] text-[${designTokens.darkMode.textPrimary}] hover:bg-[${designTokens.darkMode.secondary}`,\r\n\t\tsecondary: `bg-[${designTokens.darkMode.secondary}] text-[${designTokens.darkMode.textPrimary}] hover:bg-[${designTokens.darkMode.secondary}`,\r\n\t\toutline: `border border-[${designTokens.darkMode.outline}] text-[${designTokens.darkMode.outline}] hover:bg-[${designTokens.darkMode.secondary}`,\r\n\t};\r\n\tconst sizeStyles = {\r\n\t\tsm: `px-3 py-1 text-sm`,\r\n\t\tmd: `px-4 py-2 text-base`,\r\n\t\tlg: `px-5 py-3 text-lg`,\r\n\t};\r\n\r\n\tconst wrappedOnClick = () => {\r\n\t\tif (onClick) {\r\n\t\t\treturn startTransition(() => {\r\n\t\t\t\tonClick();\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\treturn console.log('boom');\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<motion.button\r\n\t\t\tclassName={clsx(\r\n\t\t\t\tbaseStyles,\r\n\t\t\t\tisDarkMode ? variantStylesDark[variant] : variantStylesLight[variant],\r\n\t\t\t\tsizeStyles[size],\r\n\t\t\t\t(disabled || isPending) && 'opacity-50',\r\n\t\t\t)}\r\n\t\t\tonClick={wrappedOnClick}\r\n\t\t\tdisabled={disabled || isPending}\r\n\t\t\ttype={type}\r\n\t\t\twhileHover={{ scale: 1.1 }}\r\n\t\t\twhileTap={{ scale: 0.9 }}\r\n\t\t\tstyle={{\r\n\t\t\t\tbackgroundColor: designTokens.colors.primary,\r\n\t\t\t\tcolor: designTokens.colors.textPrimary,\r\n\t\t\t\tborderRadius: designTokens.borderRadius.lg,\r\n\t\t\t\tboxShadow: designTokens.boxShadow.md,\r\n\t\t\t\tcursor: disabled || isPending ? 'not-allowed' : 'pointer',\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{isPending ? 'Pending...' : children}\r\n\t\t</motion.button>\r\n\t);\r\n};\r\n\r\nexport default Button;\r\n"],"names":["r","e","t","f","n","o","clsx","LayoutGroupContext","createContext","useConstant","init","ref","useRef","PresenceContext","MotionConfigContext","p","usePresence","subscribe","context","useContext","isPresent","onExitComplete","register","id","useId","useEffect","safeToRemove","useCallback","isBrowser","useIsomorphicLayoutEffect","useLayoutEffect","noop","any","warning","invariant","check","message","memo","callback","result","progress","from","to","value","toFromDifference","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","MotionGlobalConfig","stepsOrder","statsBuffer","createRenderStep","runNextFrame","stepName","thisFrame","nextFrame","isProcessing","flushNextFrame","toKeepAlive","latestFrameData","numCalls","triggerCallback","step","keepAlive","immediate","queue","frameData","maxElapsed","createRenderBatcher","scheduleNextBatch","allowKeepAlive","useDefaultElapsed","state","flagRunNextFrame","steps","acc","key","read","resolveKeyframes","update","preRender","render","postRender","processBatch","timestamp","wake","process","i","frame","cancelFrame","frameSteps","LazyContext","featureProps","featureDefinitions","props","name","loadFeatures","features","validMotionProps","isValidMotionProp","shouldForward","loadExternalIsValidProp","isValidProp","filterProps","isDom","forwardMotionProps","filteredProps","warned","warnOnce","condition","element","createDOMMotionComponentProxy","componentFactory","componentCache","deprecatedFactoryFunction","args","_target","MotionContext","isAnimationControls","v","isVariantLabel","variantPriorityOrder","variantProps","isControllingVariants","isVariantNode","getCurrentTreeVariants","initial","animate","useCreateMotionContext","useMemo","variantLabelsAsDependency","prop","motionComponentSymbol","isRefObject","useMotionRef","visualState","visualElement","externalRef","instance","camelToDash","str","optimizedAppearDataId","optimizedAppearDataAttribute","microtask","SwitchLayoutGroupContext","useVisualElement","Component","createVisualElement","ProjectionNodeConstructor","_a","_b","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","initialLayoutGroupConfig","createProjectionNode","isMounted","useInsertionEffect","optimisedAppearId","wantsHandoff","initialPromotionConfig","layoutId","layout","drag","dragConstraints","layoutScroll","layoutRoot","getClosestProjectingNode","createRendererMotionComponent","preloadedFeatures","useRender","useVisualState","MotionComponent","MeasureLayout","configAndProps","useLayoutId","isStatic","useStrictMode","layoutProjection","getProjectionFunctionality","jsxs","jsx","ForwardRefMotionComponent","forwardRef","layoutGroupId","isStrict","strictMessage","combined","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","scaleCorrectors","addScaleCorrector","correctors","transformPropOrder","transformProps","isForcedMotionValue","isMotionValue","getValueAsType","type","clamp","min","max","number","alpha","scale","createUnitType","unit","degrees","percent","px","vh","vw","progressPercentage","browserNumberValueTypes","transformValueTypes","int","numberValueTypes","translateAlias","numTransforms","buildTransform","latestValues","transform","transformTemplate","transformString","transformIsDefault","valueIsDefault","valueAsType","transformName","buildHTMLStyles","style","vars","transformOrigin","hasTransform","hasTransformOrigin","originX","originY","originZ","createHtmlRenderState","copyRawValuesOnly","target","source","useInitialMotionValues","useStyle","styleProp","useHTMLProps","htmlProps","lowercaseSVGElements","isSVGComponent","dashKeys","camelKeys","buildSVGPath","attrs","length","spacing","offset","useDashCase","keys","pathLength","pathSpacing","calcOrigin","origin","size","calcSVGTransformOrigin","dimensions","pxOriginX","pxOriginY","buildSVGAttrs","attrX","attrY","attrScale","pathOffset","latest","isSVGTag","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","elementProps","Fragment","children","renderedChildren","createElement","getValueState","resolveVariantFromProps","definition","custom","current","velocity","isKeyframesTarget","isCustomValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeState","scrapeMotionValuesFromProps","createRenderState","onUpdate","makeLatestValues","makeUseVisualState","config","make","scrapeMotionValues","values","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","resolved","transitionEnd","transition","valueTarget","index","prevProps","newValues","htmlMotionConfig","updateSVGDimensions","renderState","renderHTML","projection","camelCaseAttributes","renderSVG","_styleProp","scrapeMotionValuesFromProps$1","targetKey","layoutProps","svgMotionConfig","needsMeasure","createMotionComponentFactory","resolveVariant","supportsScrollTimeline","BaseGroupPlaybackControls","animations","animation","propName","newValue","timeline","fallback","subscriptions","cancel","time","speed","methodName","controls","GroupPlaybackControls","onResolve","onReject","getValueTransition","maxGeneratorDuration","calcGeneratorDuration","generator","duration","timeStep","isGenerator","attachTimeline","isBezierDefinition","easing","supportsFlags","memoSupports","supportsFlag","memoized","supportsLinearEasing","generateLinearEasing","resolution","points","numPoints","isWaapiSupportedEasing","supportedWaapiEasing","cubicBezierAsString","a","b","c","d","mapEasingToNativeEasing","segmentEasing","isDragging","isDragActive","resolveElements","elementOrSelector","scope","selectorCache","root","elements","setupGesture","options","gestureAbortController","eventOptions","isValidHover","event","hover","onHoverStart","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent","capturePointer","action","actionName","isNodeOrChild","child","isPrimaryPointer","focusableElements","isElementKeyboardAccessible","isPressing","filterEvents","firePointerEvent","enableKeyboardPress","focusEvent","handleKeydown","handleKeyup","handleBlur","isValidPressEvent","press","targetOrSelector","onPressStart","targets","cancelEvents","startPress","startEvent","onPressEnd","onPointerEnd","endEvent","success","onPointerUp","onPointerCancel","upEvent","checkOutside","cancelEvent","canAddKeyboardAccessibility","rect","setDragLock","axis","positionalKeys","now","clearTime","newTime","addUniqueItem","arr","item","removeItem","SubscriptionManager","handler","numSubscriptions","velocityPerSecond","frameDuration","MAX_VELOCITY_DELTA","isFloat","MotionValue","currentTime","prevFrameValue","subscription","eventName","unsubscribe","eventManagers","passiveEffect","stopPassiveEffect","prev","delta","endAnimation","startAnimation","resolve","motionValue","setMotionValue","setTarget","isWillChangeMotionValue","addValueToWillChange","willChange","getOptimisedAppearId","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","binarySubdivide","x","lowerBound","upperBound","mX1","mX2","currentX","currentT","cubicBezier","mY1","mY2","getTForX","aX","mirrorEasing","reverseEasing","backOut","backIn","backInOut","anticipate","circIn","circOut","circInOut","isZeroValueString","isNone","sanitize","floatRegex","isNullish","singleColorRegex","isColorString","testProp","splitColor","aName","bName","cName","clampRgbUnit","rgbUnit","rgba","red","green","blue","alpha$1","parseHex","g","hex","hsla","hue","saturation","lightness","color","colorRegex","test","NUMBER_TOKEN","COLOR_TOKEN","VAR_TOKEN","VAR_FUNCTION_TOKEN","SPLIT_TOKEN","complexRegex","analyseComplexValue","originalValue","indexes","types","split","parsedValue","parseComplexValue","createTransformer","numSections","output","convertNumbersToZero","getAnimatableNone","parsed","complex","maxDefaults","applyDefaultFilter","defaultValue","functionRegex","filter","functions","defaultValueTypes","getDefaultValueType","defaultValueType","invalidTemplates","makeNoneKeyframesAnimatable","unresolvedKeyframes","noneKeyframeIndexes","animatableTemplate","keyframe","noneIndex","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","removeNonTranslationalTransform","removedTransforms","positionalValues","paddingLeft","paddingRight","y","paddingTop","paddingBottom","top","left","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","resolver","elementsToMeasure","transformsToRestore","restore","readAllKeyframes","flushKeyframeResolvers","KeyframeResolver","onComplete","isAsync","currentValue","finalKeyframe","valueAsRead","isNumericalString","splitCSSVariableRegex","parseCSSVariable","match","token1","token2","maxDepth","getVariableValue","depth","trimmed","testValueType","auto","dimensionValueTypes","findDimensionValueType","DOMKeyframesResolver","originType","targetType","measureKeyframe","finalKeyframeIndex","unsetTransformName","unsetTransformValue","isAnimatable","hasKeyframesChanged","keyframes","canAnimate","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","isNotNull","getFinalKeyframe","repeat","repeatType","resolvedKeyframes","MAX_RESOLVE_DELAY","BaseAnimation","autoplay","delay","repeatDelay","resolvedAnimation","reject","mixNumber","hueToRgb","q","hslaToRgba","mixImmediate","mixLinearColor","fromExpo","expo","colorTypes","getColorType","asRGBA","model","mixColor","fromRGBA","toRGBA","blended","combineFunctions","pipe","transformers","invisibleValues","mixVisibility","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","matchOrder","orderedOrigin","pointers","originIndex","originValue","template","originStats","targetStats","mix","velocitySampleDuration","calcGeneratorVelocity","resolveValue","prevT","springDefaults","safeMin","findSpring","bounce","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","initialGuess","approximateRoot","stiffness","rootIterations","durationKeys","physicsKeys","isSpringType","getSpringOptions","springOptions","visualDuration","damping","derived","spring","optionsOrVisualDuration","restSpeed","restDelta","isResolvedFromDuration","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","dampedAngularFreq","freqForT","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","calculatedDuration","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","isOutOfBounds","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","easeIn","easeOut","easeInOut","isEasingArray","ease","easingLookup","easingDefinitionToFunction","x1","y1","x2","y2","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","isZeroDeltaRange","interpolator","progressInRange","fillOffset","remaining","offsetProgress","defaultOffset","convertOffsetToTimes","defaultEasing","keyframeValues","times","easingFunctions","absoluteTimes","mapTimeToKeyframe","frameloopDriver","passTimestamp","generators","percentToProgress","MainThreadAnimation","onStop","KeyframeResolver$1","onResolved","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","resolvedDuration","totalDuration","sample","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","iterationProgress","done","isAnimationFinished","newSpeed","hasChanged","driver","onPlay","startTime","acceleratedValues","startWaapiAnimation","valueName","keyframeOptions","supportsWaapi","sampleDelta","maxDuration","requiresPregeneratedKeyframes","pregenerateKeyframes","sampleAnimation","pregeneratedKeyframes","unsupportedEasingFunctions","isUnsupportedEase","AcceleratedAnimation","pregeneratedAnimation","sampleTime","underDampedSpring","criticallyDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isTransitionDefined","when","_delay","delayChildren","staggerChildren","staggerDirection","animateMotionValue","isHandoff","valueTransition","shouldSkip","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","animationTypeState","appearId","animateVariant","variant","getAnimation","getChildAnimations","forwardDelay","animateChildren","first","last","maxStaggerDuration","generateStaggerDuration","sortByTreeOrder","animateVisualElement","resolvedDefinition","shallowCompare","next","prevLength","numVariantProps","getVariantContext","reversePriorityOrder","numAnimationTypes","animateList","createAnimationState","createState","isInitialRender","buildResolvedTypeValues","setAnimateFunction","makeAnimator","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","fallbackAnimation","initialTransition","fallbackTarget","shouldAnimate","setActive","isActive","createTypeState","Feature","node","AnimationFeature","prevAnimate","ExitAnimationFeature","prevIsPresent","exitAnimation","addDomEvent","extractEventInfo","addPointerInfo","addPointerEvent","convertBoundingBoxToBox","right","bottom","convertBoxToBoundingBox","transformBoxPoints","point","transformPoint","topLeft","bottomRight","SCALE_PRECISION","SCALE_MIN","SCALE_MAX","TRANSLATE_PRECISION","TRANSLATE_MIN","TRANSLATE_MAX","calcLength","isNear","maxDistance","calcAxisDelta","calcBoxDelta","calcRelativeAxis","relative","calcRelativeBox","calcRelativeAxisPosition","calcRelativePosition","createAxisDelta","createDelta","createAxis","createBox","eachAxis","isIdentityScale","hasScale","scaleX","scaleY","has2DTranslate","is2DTranslate","scalePoint","originPoint","distanceFromOrigin","scaled","applyPointDelta","translate","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","applyTreeDeltas","treeScale","treePath","isSharedTransition","treeLength","transformBox","translateAxis","distance","transformAxis","axisTranslate","axisScale","axisOrigin","measureViewportBox","measurePageBox","rootProjectionNode","transformPagePoint","viewportBox","scroll","distance2D","xDelta","yDelta","PanSession","handlers","dragSnapToOrigin","info","getPanInfo","isPanStarted","isDistancePastThreshold","onStart","onMove","getElementIndex","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","lostPointerEvent","lostPointerInfo","subtractPoint","history","lastDevicePoint","startDevicePoint","getVelocity","timeDelta","timestampedPoint","lastPoint","applyConstraints","elastic","calcRelativeAxisConstraints","calcRelativeConstraints","layoutBox","calcViewportAxisConstraints","layoutAxis","constraintsAxis","calcViewportConstraints","constraintsBox","sourceLength","targetLength","rebaseAxisConstraints","constraints","relativeConstraints","defaultElastic","resolveDragElastic","dragElastic","resolveAxisElastic","minLabel","maxLabel","resolvePointElastic","label","elementDragControls","VisualElementDragControls","originEvent","snapToCursor","dragPropagation","onDragStart","measuredAxis","animationState","dragDirectionLock","onDirectionLock","onDrag","getCurrentDirection","onDragEnd","_point","shouldDrag","axisValue","prevConstraints","onMeasureDragConstraints","constraintsElement","measuredConstraints","userConstraints","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","dragKey","externalMotionValue","boxProgress","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","direction","currentDirection","lockThreshold","DragGesture","dragControls","asyncHandler","PanGesture","pointerDownEvent","onPanSessionStart","onPanStart","onPan","onPanEnd","globalProjectionState","pixelsToPercent","pixels","correctBorderRadius","correctBoxShadow","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","layoutDependency","stack","promoteContext","animateSingleValue","motionValue$1","isSVGElement","compareByDepth","FlatTree","timeout","start","checkElapsed","borders","numBorders","asNumber","isPx","mixValues","follow","lead","shouldCrossfadeOpacity","isOnlyMember","easeCrossfadeIn","easeCrossfadeOut","borderLabel","followRadius","getRadius","leadRadius","radiusName","compress","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisDelta","sourceAxis","removeAxisTransforms","transforms","scaleKey","originKey","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","boxEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","prevLead","indexOfNode","member","preserveFollowOpacity","crossfade","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","zTranslate","transformPerspective","rotate","rotateX","rotateY","skewX","skewY","elementScaleX","elementScaleY","transformAxes","hiddenVisibility","animationTarget","resetDistortingTransform","sharedAnimationValues","cancelTreeOptimisedTransformAnimations","projectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","subscriptionManager","isLayoutDirty","cancelDelay","resizeUnblockUpdate","finishAnimation","hasRelativeLayoutChanged","newLayout","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","hasTargetChanged","hasOnlyRelativeTargetChanged","animationOptions","resetSkewAndRotation","shouldNotifyListeners","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","updateLayout","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","prevLayout","phase","needsMeasurement","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","roundBox","checkNodeWasScrollRoot","boxWithoutScroll","transformOnly","withTransforms","boxWithoutTransform","nodeBox","forceRecalculation","isShared","relativeParent","canSkip","prevTreeScaleX","prevTreeScaleY","notifyAll","snapshot","snapshotLatestValues","mixedValues","targetDelta","relativeLayout","snapshotSource","layoutSource","isSharedLayoutAnimation","hasOpacityCrossfade","prevRelativeTarget","mixAxisDelta","mixBox","targetWithTransforms","shouldAnimatePositionOnly","xLength","yLength","needsReset","hasDistortingTransform","resetValues","styles","emptyStyles","valuesToRender","correct","applyTo","isCSSVariable","corrected","num","measuredLayout","animationType","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","mixAxis","userAgentContains","string","roundPoint","roundAxis","DocumentProjectionNode","notify","HTMLProjectionNode","documentNode","handleHoverEvent","lifecycle","HoverGesture","_element","FocusGesture","isFocusVisible","handlePressEvent","PressGesture","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","initIntersectionObserver","lookupRoot","rootObservers","observeIntersection","rootInteresectionObserver","thresholdNames","InViewFeature","viewport","rootMargin","amount","once","onIntersectionUpdate","isIntersecting","onViewportEnter","onViewportLeave","hasViewportOptionChanged","prevViewport","gestureAnimations","prefersReducedMotion","hasReducedMotionListener","initPrefersReducedMotion","motionMediaQuery","setReducedMotionPreferences","valueTypes","findValueType","visualElementStore","updateMotionValuesFromProps","nextValue","prevValue","existingValue","latestValue","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","blockInitialAnimation","initialMotionValues","remove","feature","valueIsTransform","removeOnChange","removeOnRenderRequest","removeSyncCheck","other","featureDefinition","isEnabled","FeatureConstructor","listenerName","listener","closestVariantNode","valueFromInitial","DOMVisualElement","getComputedStyle","HTMLVisualElement","defaultType","computedStyle","SVGVisualElement","createDomVisualElement","createMotionComponent","motion","designTokens","useTheme","ThemeContext","Button","onClick","disabled","className","isDarkMode","isPending","startTransition","useTransition","baseStyles","variantStylesLight","variantStylesDark","sizeStyles","wrappedOnClick"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246]}